.MODEL SMALL
.STACK 100h

.DATA

file_name db 'gamedata.txt',0
file_handle dw ?

display_press_anybutton db 'Press any button except POWER BUTTON!!! $'
display_text_for_name db 'Enter your name:$'
display_player_name db 'Player name: $'
display_confirmation_stat db 'Do you want to continue with this name?$'
display_yes_state db 'If yes then press y$'
display_no_state db 'If no then press n$'
display_account db 'Account:$'
display_proceed_to_next_round db 'Proceeding to next round $'
display_dot db '.$'


text_to_show_start_option db'Press y to Start Game$'						;Texts for button
text_to_show_level_option db 'Press l to select Levels$'
text_to_show_setting_option db 'Press s to go to Settings$'
text_to_show_exit_option db 'Press e to exit the game$'
text_to_show_back_button db '<- Back(b)$'
text_to_show_game_start_button db 'Press Enter to Start$'
text_to_show_resume_option db 'Resume(y)$'
text_to_show_restart_option db 'Restart(r)$'
text_to_show_back_to_menu_option db 'Back to Menu(f)$'
text_to_show_exit_option_during_game db'Exit Game(z)$'
text_to_show_control_option_in_setting db 'Press c to view controls$'
text_to_show_change_color_option_in_setting db 'Press v to change background color$'
text_to_show_number_of_hits db 'HITS : $'
text_to_show_number_of_score db 'SCORE : $'
text_to_show_number_of_miss db 'MISS : $'
text_to_display_duck_ran_away db 'DUCK RAN AWAY!!!!$'
text_to_display_retry db 'Retry(r)$'










text_to_display_black_color db '1. Black (0)$'							;Texts for colors
text_to_display_blue_color db '2. Blue (1)$'
text_to_display_green_color db '3. Green (2)$'
text_to_display_cyan_color db '4. Cyan (3)$'
text_to_display_red_color db '5. Red (4)$'
text_to_display_magenta_color db '6. Magenta (5)$'
text_to_display_brown_color db '7. Brown (6)$'
text_to_display_lightgray_color db '8. Light Gray (7)$'
text_to_display_darkgray_color db '9. Dark Gray (8)$'
text_to_display_lightblue_color db '10. Light Blue (9)$'
text_to_display_lightgreen_color db '11. Light Green (A)$'
text_to_display_lightcyan_color db '12. Light Cyan (B)$'
text_to_display_lightred_color db '13. Light Red (C)$'
text_to_display_lightmagenta_color db '14. Light Magenta(D)$'
text_to_display_yellow_color db '15. Yellow (E)$'
text_to_display_white_color db '16. White (F)$'
text_to_display_enter_bar db 'ENTER :$'



text_to_display_setting_action db 'ACTIONS$'							;Texts for controls
text_to_display_setting_controls db 'KEY BINDINGS$'
text_to_display_setting_up db 'MOVE UP$'
text_to_display_setting_down db 'MOVE DOWN$'
text_to_display_setting_left db 'MOVE LEFT$'
text_to_display_setting_right db 'MOVE RIGHT$'
text_to_display_setting_esc db 'PAUSE$'
text_to_display_setting_shoot db 'SHOOT$'
text_to_display_setting_option_up db 'ARROW KEY(^)$'
text_to_display_setting_option_down db 'ARROW KEY(v)$'
text_to_display_setting_option_left db 'ARROW KEY(<)$'
text_to_display_setting_option_right db 'ARROW KEY(>)$'
text_to_display_setting_option_esc db 'ESC KEY$'
text_to_display_setting_option_shoot db 'ENTER KEY$'





display_level_1 db 'LEVEL 1 $'									;Text for level
display_level_2 db 'LEVEL 2 $'
display_level_3 db 'LEVEL 3 $'
display_level_bonus db 'LEVEL BONUS $'
level_number db 1

												
												;Variables for crosshair
currentX Dw 30     										; Initial X-coordinate for crosshair
currentY Dw 30     										; Initial Y-coordinate for crosshair
temp_value_for_crosshair1 dw 33
temp_value_for_crosshair2 dw 42
temp_value_for_crosshair3 dw 59
temp_value_for_crosshair4 dw 71
temp_value_for_crosshair5 dw 12
temp_value_for_crosshair6 dw 24
temp_value_for_crosshair7 dw 49
temp_value_for_crosshair8 dw 52
temp_value_for_crosshair9 dw 39
temp_value_for_crosshair10 dw 51
center_point_of_crosshair_x dw 50
center_point_of_crosshair_y dw 31
yi_for_dead_duck dw 0
yf_for_dead_duck dw 0



score_value1 db 0										;variables for score
score_value2 db 0
score_value3 db 0
score_value4 db 0
score_value5 db 0
number_of_miss1 db 0
number_of_miss2 db 0


number_of_bullets_remaining db 3								;variable for bullets


x_initial_duck dw 270										;variables to store coordinate of ducks
x_final_duck dw 294
y_initial_duck dw 115
y_final_duck dw 140
x_cordinate_for_shoot dw 0
y_cordinate_for_shoot dw 0
left_to_upright db 0
left_to_downright db 0
right_to_upleft db 0
right_to_downleft db 0
top_to_rightdown db 0
top_to_leftdown db 0
bottom_to_rightup db 0
bottom_to_leftup db 0
temp_x_initial_coordinate dw 0
temp_x_final_coordinate dw 0
temp_y_initial_coordinate dw 0
temp_y_final_coordinate dw 0




temp_to_store_num_of_char dw 0									;variable to store number of character
array_to_store_name db 20 dup(?)								;array to store name
value_for_background db 0									;variable to store background value
max_score db 9											;variable to store max score
min_score db 0											;variable to store min score
;cursor_time db 0
;duck_time db 1
number_of_yellow_ducks db 0
temp_for_hit db 0
temp_to_display_proceed dw 0
number_of_ducks_spawned db 1
temp_telling_us_to_show_dead_duck db 0
temp_resume db 1
number_of_level db 1






arr1 db 04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 00,00,04,04,04,04,04,04,04,00,00,00,00,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 00,00,04,04,04,04,04,04,04,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00


arr2 db 04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04
db 00,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04
db 00,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04
db 00,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04
db 00,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04
db 00,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04
db 00,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04
db 00,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04
db 00,04,04,04,04,04,04,04,04,00,00,00,04,04,04,04,04,04,04,04,00
db 00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00
db 00,00,00,00,00,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00


arr3 db 00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,00

arr4 db 04,04,04,04,04,04,04,04,04,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,00,00,04,04,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,04,00,04,04,04,04,04,04,04,00,00,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00
db 00,00,04,04,04,04,04,04,04,00,04,04,04,04,04,04,04,00,00,00,00
db 04,04,04,04,04,04,04,04,04,00,00,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,00,00,00,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,00,00,00,00,04,04,04,04,04,04,04,00

arr5 db 00,00,00,00,00,00
db 00,00,00,00,00,00
db 00,00,00,00,00,00
db 00,00,00,00,00,00
db 00,00,00,00,00,00
db 00,00,00,00,00,00
db 00,00,00,00,00,00
db 00,00,00,00,00,00
db 00,00,00,00,00,00
db 00,00,00,00,00,00
db 00,00,00,00,00,00
db 00,00,00,00,00,00
db 00,00,00,00,00,00
db 00,00,00,00,00,00
db 00,00,00,00,00,00
db 00,00,00,00,00,00


arr6 db 00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00
db 00,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00
db 00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04
db 00,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00

arr7 db 04,04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04,04
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00,00
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00,00
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00,00
db 04,04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04,04


arr8 db 00,00,00,00,00,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,00,00,00,00,00
db 00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00
db 00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04
db 00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00
db 00,00,00,00,00,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,00,00,00,00,00


arr9 db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,00,00,04,04,04,04,04,04,04,00,00,04,04,04,04,04,04
db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00
db 00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00
db 00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00
db 00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00


arr10 db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,04,04,04,04,04,04,00,00,00,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,04,04,04,04,04,04,00,00,00,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04


S_logo_for_select db 00,00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00
db 00,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,00,00,00,00,00,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00
db 11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,11,11,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00
db 00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00,00,00,00
db 00,00,00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00,00
db 00,00,00,00,00,00,00,11,11,11,11,11,11,11,11,11,11,11,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,00
db 00,00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,00,00,00,00,00,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00
db 00,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00,00,00


E_logo_for_select db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,11,11,11,11,11,11,00
db 00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00,00,00
db 00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00,00,00
db 00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00,00,00
db 00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00,00,00
db 00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00


L_logo_for_select db 11,11,11,11,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 11,11,11,11,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 11,11,11,11,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 11,11,11,11,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00


C_logo_for_select db 00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 00,00,00,00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 00,00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,11,11,11,11,11,11,00
db 00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 00,00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 00,00,00,00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,00


T_logo_for_select db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,00,00,11,11,11,11,11,11,11,00,00,11,11,11,11,11,11,00
db 00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,11,11,11,11,11,11,11,11,11,11,11,00,00,00,00,00,00,00
db 00,00,00,00,00,00,11,11,11,11,11,11,11,11,11,11,11,00,00,00,00,00,00,00
db 00,00,00,00,00,00,11,11,11,11,11,11,11,11,11,11,11,00,00,00,00,00,00,00
db 00,00,00,00,00,00,11,11,11,11,11,11,11,11,11,11,11,00,00,00,00,00,00,00


V_logo_for_level db 11,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,11,00
db 00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,00,00
db 00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,00,00,00
db 00,00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,11,11,11,11,11,11,11,00,00,00,00
db 00,00,00,00,11,11,11,11,11,11,11,00,00,00,00,00,11,11,11,11,11,11,11,00,00,00,00,00
db 00,00,00,00,00,11,11,11,11,11,11,11,00,00,00,11,11,11,11,11,11,11,00,00,00,00,00,00
db 00,00,00,00,00,00,11,11,11,11,11,11,11,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00


emoji_angry db 05,05,05,05,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,05,05,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,05,05,05
db 05,05,05,05,05,05,05,05,00,00,00,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,00,00,00,05,05,05,05,05,05,05,05,05
db 05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,00
db 05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,00
db 00,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,00,00
db 00,00,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,00,00,00,00,00
db 00,00,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,00,00,00,00
db 00,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,00,00,00,00
db 00,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,00,00,00
db 05,05,05,05,05,05,05,05,05,05,05,05,07,07,07,05,05,05,05,05,05,07,07,07,05,05,05,05,05,05,05,05,05,05,05,05,00,00,00
db 05,05,05,05,05,05,05,05,05,05,05,05,04,04,04,07,05,05,05,05,07,04,04,04,05,05,05,05,05,05,05,05,05,05,05,05,00,00,00
db 00,05,05,05,05,05,05,05,05,05,05,05,04,04,04,05,05,05,05,05,05,04,04,04,05,05,05,05,05,05,05,05,05,05,05,05,00,00,00
db 00,05,05,05,05,05,05,05,05,05,05,05,04,04,04,05,05,05,05,05,05,04,04,04,05,05,05,05,05,05,05,05,05,05,05,00,00,00,00
db 00,00,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,00,00,00,00
db 00,00,05,05,05,05,05,05,05,05,05,04,04,05,05,05,05,05,05,05,05,05,05,04,04,05,05,05,05,05,05,05,05,05,00,00,00,00,00
db 00,00,00,05,05,05,05,05,05,05,05,05,04,04,04,04,04,04,04,04,04,04,05,05,05,05,05,05,05,05,05,05,00,00,00,00,00,00,00
db 00,00,00,00,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,05,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,05,05,05,05,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00


S_logo_for_setting db 00,00,00,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00,00
db 00,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,00,00,00,00,00,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,00,00,00,00,00,00,00,00,00,00,00,00,00
db 08,08,08,08,08,08,08,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,08,08,08,08,08,08,08,08,08,00,00,00,00,00,00,00,00,00,00
db 00,00,08,08,08,08,08,08,08,08,08,08,08,08,08,00,00,00,00,00
db 00,00,00,00,08,08,08,08,08,08,08,08,08,08,08,08,08,00,00,00
db 00,00,00,00,00,00,00,08,08,08,08,08,08,08,08,08,08,08,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,08,08,08,08,08,08,08,00
db 00,00,00,00,00,00,00,00,00,00,00,00,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,00,00,00,00,00,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00,00
db 00,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00,00,00,00


E_logo_for_setting db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 00,00,08,08,08,08,08,08,08,00,00,00,00,00,00,00,08,08,08,08,08,08,00
db 00,00,08,08,08,08,08,08,08,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00,00,00,00
db 00,00,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00,00,00,00
db 00,00,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00,00,00,00
db 00,00,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00,00,00,00
db 00,00,08,08,08,08,08,08,08,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,08,08,08,08,08,08,08,00,00,00,00,00,00,00,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00


T_logo_for_setting db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,00,00,08,08,08,08,08,08,08,00,00,08,08,08,08,08,08,00
db 00,00,00,00,00,00,00,00,08,08,08,08,08,08,08,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,08,08,08,08,08,08,08,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,08,08,08,08,08,08,08,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,08,08,08,08,08,08,08,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,08,08,08,08,08,08,08,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,08,08,08,08,08,08,08,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,08,08,08,08,08,08,08,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,08,08,08,08,08,08,08,08,08,08,08,00,00,00,00,00,00,00
db 00,00,00,00,00,00,08,08,08,08,08,08,08,08,08,08,08,00,00,00,00,00,00,00
db 00,00,00,00,00,00,08,08,08,08,08,08,08,08,08,08,08,00,00,00,00,00,00,00
db 00,00,00,00,00,00,08,08,08,08,08,08,08,08,08,08,08,00,00,00,00,00,00,00


I_logo_for_setting db 08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,00
db 00,00,08,08,08,08,08,08,00,00,00
db 00,00,08,08,08,08,08,08,00,00,00
db 00,00,08,08,08,08,08,08,00,00,00
db 00,00,08,08,08,08,08,08,00,00,00
db 00,00,08,08,08,08,08,08,00,00,00
db 00,00,08,08,08,08,08,08,00,00,00
db 00,00,08,08,08,08,08,08,00,00,00
db 00,00,08,08,08,08,08,08,00,00,00
db 08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,00


N_logo_for_setting db 08,08,08,08,08,08,08,08,00,00,00,00,00,00,00,00,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,00,00,00,00,00,00,00,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,00,00,00,00,00,00,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,08,00,00,00,00,00,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,08,08,00,00,00,00,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,08,08,08,00,00,00,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,08,08,08,08,08,08,00,00,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,00,08,08,08,08,08,08,00,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,00,00,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,00,00,00,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,00,00,00,00,08,08,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,00,00,00,00,00,08,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,00,00,00,00,00,00,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,00,00,00,00,00,00,00,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,00,00,00,00,00,00,00,00,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,08,00,00,00,00,00,00,00,00,00,08,08,08,08,08,08,08,00


G_logo_for_setting db 00,00,00,00,00,00,00,00,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 00,00,00,00,00,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 00,00,00,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 00,00,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 00,08,08,08,08,08,08,08,00,00,00,00,00,00,00,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 08,08,08,08,08,08,08,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 08,08,08,08,08,08,08,00,00,00,00,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,00,00,00,00,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,00,00,00,00,08,08,08,08,08,08,08,08,08,08,00
db 08,08,08,08,08,08,08,00,00,00,00,00,00,00,00,08,08,08,08,08,08,00
db 00,08,08,08,08,08,08,08,00,00,00,00,00,00,00,08,08,08,08,08,08,00
db 00,00,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 00,00,00,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 00,00,00,00,00,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,08,00
db 00,00,00,00,00,00,00,00,08,08,08,08,08,08,00,00,00,08,08,08,08,00


O_logo_for_color db 00,00,00,00,00,11,11,11,11,11,11,11,11,11,00,00,00,00,00,00
db 00,00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00,00,00
db 00,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,00,00,00,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,00,00,00,00,00,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,00,00,00,00,00,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,00,00,00,00,00,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,00,00,00,00,00,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,00,00,00,00,00,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,00,00,00,00,00,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,00,00,00,11,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00
db 00,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00
db 00,00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00,00,00
db 00,00,00,00,00,11,11,11,11,11,11,11,11,11,00,00,00,00,00,00


R_logo_for_color db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00,00,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00,00
db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00
db 11,11,11,11,11,11,11,11,00,00,00,00,00,11,11,11,11,11,11,11,00
db 00,00,11,11,11,11,11,11,00,00,00,00,00,11,11,11,11,11,11,11,00
db 00,00,11,11,11,11,11,11,00,00,00,00,00,11,11,11,11,11,11,11,00
db 00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00
db 00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00,00
db 00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00
db 00,00,11,11,11,11,11,11,00,00,00,00,00,11,11,11,11,11,11,11,00
db 00,00,11,11,11,11,11,11,00,00,00,00,00,11,11,11,11,11,11,11,00
db 00,00,11,11,11,11,11,11,00,00,00,00,00,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,00,00,00,00,00,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,00,00,00,00,00,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,00,00,00,00,00,11,11,11,11,11,11,11,00
db 11,11,11,11,11,11,11,11,00,00,00,00,00,11,11,11,11,11,11,11,00


C_logo_for_controls db 00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,14,14,14,14,14,14,00
db 00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,00


O_logo_for_controls db 00,00,00,00,00,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00
db 00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00,00,00
db 00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00
db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,00,00,00,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,00,00,00,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00
db 00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00,00,00
db 00,00,00,00,00,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00


N_logo_for_controls db 14,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,14,00,00,00,00,00,00,00,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,14,14,14,14,00,00,00,00,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,14,14,14,14,14,00,00,00,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,00,14,14,14,14,14,14,00,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,00,00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,00,00,00,00,00,00,00,14,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,00


T_logo_for_controls db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,00,00,14,14,14,14,14,14,14,00,00,14,14,14,14,14,14,00
db 00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00,00
db 00,00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00,00
db 00,00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00,00
db 00,00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00,00


R_logo_for_controls db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00,00,00
db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00,00
db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00
db 14,14,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,00
db 00,00,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,00
db 00,00,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,00
db 00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00
db 00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00,00
db 00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00
db 00,00,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,00
db 00,00,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,00
db 00,00,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,00



L_logo_for_controls db 14,14,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 14,14,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 14,14,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 14,14,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00


S_logo_for_controls db 00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00
db 00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00
db 00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00,00,00,00
db 00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00,00
db 00,00,00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,00
db 00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00
db 00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00,00,00





bullet db 00,00,00,00,00,00,07,07,00,00,00,00,00,00                                   ; bullets
db 00,00,00,00,00,07,07,07,07,00,00,00,00,00
db 00,00,00,00,07,07,07,07,07,07,00,00,00,00
db 00,00,00,07,07,07,07,07,07,07,07,00,00,00
db 00,00,00,14,14,14,14,14,14,14,14,00,00,00
db 00,00,00,14,14,14,14,14,14,14,14,00,00,00
db 00,00,00,14,14,14,14,14,14,14,14,00,00,00
db 00,00,00,14,14,14,14,14,14,14,14,00,00,00
db 00,00,00,14,14,14,14,14,14,14,14,00,00,00
db 00,00,00,14,14,14,14,14,14,14,14,00,00,00
db 00,00,00,14,14,14,14,14,14,14,14,00,00,00
db 00,00,00,14,14,14,14,14,14,14,14,00,00,00

x_boundary db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15

y_boundary db 15,15                                   								;boundary
db 15,15
db 15,15
db 15,15
db 15,15
db 15,15
db 15,15
db 15,15
db 15,15
db 15,15
db 15,15
db 15,15
db 15,15
db 15,15
db 15,15
db 15,15

y_for_controls db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12 

y_for_underline  db 12,12,12,12,12,12,12,12,12,12,12,12
db 12,12,12,12,12,12,12,12,12,12,12,12



crossX db 04,04,04,04,04,04,04,04,04,04,04,04                                    ;Crosshair
db 04,04,04,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,04,04,04

crossY db 04,04,04
db 04,04,04
db 04,04,04
db 04,04,04
db 04,04,04
db 04,04,04
db 04,04,04
db 04,04,04
db 04,04,04
db 04,04,04
db 04,04,04
db 04,04,04


duck DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  0
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  1
        DB 0Bh,0Bh,0Bh,0Bh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,0Bh,0Bh,0Bh,0Bh     ;  2
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Fh,0Bh,0Bh     ;  3
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Fh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  4
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Fh,0Bh,03h,03h,03h,03h,03h,03h,03h,0Bh     ;  5
        DB 0Fh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Fh,0Bh     ;  6
        DB 03h,03h,03h,03h,03h,03h,03h,03h,03h,0Bh,0Fh,0Bh,0Bh,0Bh,0Bh     ;  7
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Fh,0Bh,03h,03h,03h,03h,03h,03h     ;  8
        DB 03h,03h,03h,0Bh,0Fh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  9
        DB 0Bh,0Fh,0Bh,03h,0Bh,0Fh,03h,03h,03h,03h,03h,03h,0Bh,0Fh,0Bh     ; 10
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Fh,0Bh,03h,0Bh,0Bh     ; 11
        DB 03h,03h,03h,03h,03h,03h,03h,03h,0Fh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 12
        DB 0Bh,0Bh,0Bh,0Bh,0Fh,0Bh,03h,03h,03h,03h,03h,03h,0Bh,0Bh,0Bh     ; 13
        DB 0Fh,0Fh,03h,0Fh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Fh,0Bh     ; 14
        DB 03h,03h,03h,03h,03h,03h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,03h,0Fh,0Bh     ; 15
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Fh,0Bh,02h,03h,03h,03h,03h,02h     ; 16
        DB 03h,03h,03h,03h,03h,03h,0Fh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Fh,0Fh     ; 17
        DB 0Fh,0Bh,0Fh,0Bh,02h,03h,03h,03h,03h,02h,02h,0Bh,0Fh,0Fh,0Fh     ; 18
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Fh,08h,08h,08h,0Fh,0Bh,0Fh,0Bh,0Fh     ; 19
        DB 0Fh,0Fh,0Fh,0Fh,0Bh,0Fh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Fh     ; 20
        DB 08h,0Fh,0Fh,0Fh,08h,0Fh,0Fh,0Bh,03h,03h,03h,03h,03h,0Bh,0Fh     ; 21
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Fh,08h,0Fh,07h,07h,07h,0Fh,08h     ; 22
        DB 08h,08h,08h,08h,08h,08h,03h,0Bh,0Fh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 23
        DB 0Bh,0Fh,08h,07h,07h,08h,08h,07h,07h,07h,0Fh,0Fh,08h,08h,08h     ; 24
        DB 08h,03h,0Bh,0Fh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Fh,08h,07h,08h,07h     ; 25
        DB 07h,07h,07h,07h,07h,07h,0Fh,08h,08h,08h,08h,0Bh,0Fh,0Bh,0Bh     ; 26
        DB 0Bh,0Bh,0Bh,0Bh,0Fh,08h,07h,0Bh,08h,07h,07h,07h,07h,07h,07h     ; 27
        DB 07h,08h,08h,08h,08h,0Bh,0Fh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Fh,08h     ; 28
        DB 07h,0Bh,08h,08h,07h,07h,07h,07h,07h,08h,08h,08h,08h,03h,0Bh     ; 29
        DB 0Fh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Fh,08h,07h,07h,0Bh,08h,08h,08h     ; 30
        DB 08h,08h,08h,08h,0Bh,03h,03h,03h,0Bh,0Fh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 31
        DB 0Bh,0Bh,0Fh,08h,07h,07h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,03h,03h     ; 32
        DB 03h,0Bh,0Fh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Fh,08h,07h     ; 33
        DB 07h,07h,07h,07h,07h,07h,03h,03h,03h,0Bh,0Fh,0Bh,0Bh,0Bh,0Bh     ; 34
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Fh,08h,08h,08h,08h,08h,08h,0Bh     ; 35
        DB 0Bh,0Bh,0Bh,0Fh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 36
        DB 0Bh,0Bh,0Fh,03h,03h,03h,0Fh,0Fh,0Fh,03h,03h,0Fh,0Bh,0Bh,0Bh     ; 37
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 38
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 39
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 40
	DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 41	
	DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 42	
	DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 43	
	DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 44	
	DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 45	
	DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 46	
	DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 47	
	DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 48	
	DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 49	
	DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 50	


   duck_normal  DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  0
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  1
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  2
        DB 0Bh,0Bh,00h,00h,00h,00h,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  3
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,0Eh,0Eh,0Eh,0Eh,00h,0Bh,0Bh     ;  4
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,0Eh,0Eh,0Eh     ;  5
        DB 0Eh,0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  6
        DB 00h,0Eh,0Eh,00h,0Eh,00h,0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  7
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,0Eh,00h,0Eh,00h,0Eh,0Eh,00h,0Bh     ;  8
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,0Eh,00h,0Eh     ;  9
        DB 00h,0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,00h     ; 10
        DB 00h,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,00h,0Bh,00h,00h,0Bh,0Bh,0Bh     ; 11
        DB 0Bh,0Bh,0Bh,00h,06h,06h,06h,06h,06h,06h,06h,06h,0Eh,00h,00h     ; 12
        DB 0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,00h,06h,0Fh,0Fh,0Fh,0Fh,0Fh,0Fh     ; 13
        DB 0Fh,06h,0Eh,0Eh,0Eh,0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,00h,06h,0Fh     ; 14
        DB 0Fh,0Fh,0Fh,0Fh,0Fh,0Fh,06h,0Eh,0Eh,0Eh,0Eh,0Eh,00h,0Bh,0Bh     ; 15
        DB 0Bh,0Bh,0Bh,00h,06h,06h,06h,06h,06h,06h,06h,06h,0Eh,0Eh,0Eh     ; 16
        DB 0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,00h,00h,0Eh,0Eh,0Eh,0Eh     ; 17
        DB 0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 18
        DB 00h,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,00h,0Bh,0Bh     ; 19
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh     ; 20
        DB 0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,0Eh,0Eh     ; 21
        DB 0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 22
        DB 0Bh,0Bh,00h,00h,0Eh,00h,00h,00h,0Eh,00h,00h,0Bh,0Bh,0Bh,0Bh     ; 23
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,00h,0Bh,00h,0Eh,00h     ; 24
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,0Eh     ; 25
        DB 0Eh,00h,0Eh,0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 26
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 27
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 28
        DB 0Bh,0Bh,0Bh,0Bh,0Bh

duck_surprised           DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  0
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  1
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  2
        DB 0Bh,0Bh,00h,00h,00h,00h,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  3
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,0Eh,0Eh,0Eh,0Eh,00h,0Bh,0Bh     ;  4
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,0Eh,0Eh,0Eh     ;  5
        DB 0Eh,0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  6
        DB 00h,0Eh,00h,00h,0Eh,00h,00h,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  7
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,00h,00h,0Eh,00h,00h,0Eh,00h,0Bh     ;  8
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,00h,00h,0Eh     ;  9
        DB 00h,00h,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,00h     ; 10
        DB 00h,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,00h,0Bh,00h,00h,0Bh,0Bh,0Bh     ; 11
        DB 0Bh,0Bh,0Bh,0Bh,00h,0Eh,0Eh,06h,06h,06h,06h,06h,0Eh,00h,00h     ; 12
        DB 0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,0Eh,06h,0Fh,0Fh,0Fh     ; 13
        DB 0Fh,06h,0Eh,0Eh,0Eh,0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh     ; 14
        DB 0Eh,06h,0Fh,0Fh,0Fh,0Fh,06h,0Eh,0Eh,0Eh,0Eh,0Eh,00h,0Bh,0Bh     ; 15
        DB 0Bh,0Bh,0Bh,0Bh,00h,0Eh,0Eh,06h,06h,06h,06h,06h,0Eh,0Eh,0Eh     ; 16
        DB 0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,00h,00h,0Eh,0Eh,0Eh,0Eh     ; 17
        DB 0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 18
        DB 00h,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,00h,0Bh,0Bh     ; 19
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh     ; 20
        DB 0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,0Eh,0Eh     ; 21
        DB 0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 22
        DB 0Bh,0Bh,00h,00h,0Eh,00h,00h,00h,0Eh,00h,00h,0Bh,0Bh,0Bh,0Bh     ; 23
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,00h,0Bh,00h,0Eh,00h     ; 24
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,0Eh     ; 25
        DB 0Eh,00h,0Eh,0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 26
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 27
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 28
        DB 0Bh,0Bh,0Bh,0Bh,0Bh


duck_dead  DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  0
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  1
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  2
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  3
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  4
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  5
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  6
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ;  7
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Fh,0Bh,0Bh     ;  8
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Fh     ;  9
        DB 0Fh,0Fh,0Fh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 10
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Fh,0Fh,0Bh,0Bh,04h,04h,04h,0Bh,0Bh,0Bh     ; 11
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Fh,0Fh,04h,04h,00h     ; 12
        DB 0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,04h,04h     ; 13
        DB 0Fh,0Fh,0Eh,0Eh,0Eh,0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 14
        DB 0Bh,04h,04h,04h,04h,04h,04h,0Eh,04h,0Eh,0Eh,0Eh,00h,0Bh,0Bh     ; 15
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,04h,04h,04h,04h,04h,04h,04h,0Eh,0Eh,04h     ; 16
        DB 0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,04h,0Eh,0Eh,04h,0Eh     ; 17
        DB 0Eh,0Eh,0Eh,0Eh,0Eh,04h,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 18
        DB 00h,0Eh,0Eh,0Eh,0Eh,04h,0Eh,0Eh,04h,0Eh,0Eh,0Eh,00h,0Bh,0Bh     ; 19
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,04h,0Eh,0Eh     ; 20
        DB 0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,0Eh,0Eh     ; 21
        DB 0Eh,0Eh,0Eh,0Eh,0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 22
        DB 0Bh,0Bh,00h,00h,0Eh,00h,00h,00h,0Eh,00h,00h,0Bh,0Bh,0Bh,0Bh     ; 23
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,00h,0Bh,00h,0Eh,00h     ; 24
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,00h,0Eh,0Eh     ; 25
        DB 0Eh,00h,0Eh,0Eh,0Eh,00h,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 26
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 27
        DB 0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh,0Bh     ; 28
        DB 0Bh,0Bh,0Bh,0Bh,0Bh
	

duck_life_logo db 00,00,00,00,00,00,00,00,00,00,00,00,00,00                                   
db 00,00,00,00,00,00,04,04,04,00,00,00,00,00
db 00,00,00,00,00,04,04,04,04,04,00,00,00,00
db 00,00,00,00,04,04,04,04,04,04,04,00,00,00
db 00,00,00,00,04,04,04,04,04,04,04,04,00,00
db 00,00,00,00,00,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 04,04,04,04,04,04,04,04,04,04,04,00,00,00
db 00,04,04,04,04,04,04,04,04,04,04,04,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,00,04,04,04,04,04,04,04,04,04,04,00
db 00,00,00,00,04,04,04,04,04,04,04,04,00,00

ok_duck_life_logo db 00,00,00,00,00,00,00,00,00,00,00,00,00,00                                   
db 00,00,00,00,00,00,14,14,14,00,00,00,00,00
db 00,00,00,00,00,14,14,14,14,14,00,00,00,00
db 00,00,00,00,14,14,14,14,14,14,14,00,00,00
db 00,00,00,00,14,14,14,14,14,14,14,14,00,00
db 00,00,00,00,00,14,14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,14,14,14,14,14,00,00
db 14,14,14,14,14,14,14,14,14,14,14,00,00,00
db 00,14,14,14,14,14,14,14,14,14,14,14,00,00
db 00,00,14,14,14,14,14,14,14,14,14,14,14,00
db 00,00,00,14,14,14,14,14,14,14,14,14,14,00
db 00,00,00,00,14,14,14,14,14,14,14,14,00,00


DA db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,11,11,11,00,00,00,11,11,11,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,00,00,00,11,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,00,00,00,00,11,11,11,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,11,11,11,11,00,11,11,11,11,11,00,00,00,00,00,00,00,00,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,11,11,11,00,00,00,00,00,00,11,11,11,11,11,11,00,00,00,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,11,00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,00,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,11,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,11,11,11,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00

tsu db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,15,15,15,00
db 00,00,00,00,00,15,15,00,00,00,00,00,00,00,00,15,15,00
db 15,15,00,00,00,00,15,15,00,00,00,00,00,00,15,15,15,00
db 15,15,00,00,00,00,15,15,00,00,00,00,00,15,15,15,00,00
db 00,15,15,00,00,00,00,15,00,00,00,00,00,15,15,00,00,00
db 00,00,15,00,00,00,00,00,00,00,00,00,15,15,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,15,15,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,15,15,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,15,15,15,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,15,15,15,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,15,15,15,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,15,15,15,00,00,00,00,00,00,00,00,00,00
db 00,00,00,15,15,15,15,00,00,00,00,00,00,00,00,00,00,00

dada db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,14,14,14,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,14,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00,00,00,14,14,14,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,14,14,14,14,00,14,14,14,14,14,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,14,14,14,00,00,00,00,00,00,14,14,14,14,14,14,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,14,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00

ku db 00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00
db 00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00
db 00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00
db 00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00
db 00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00
db 00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00
db 00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00
db 00,00,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00
db 14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00

shi db 00,00,00,00,00,00,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00
db 14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00
db 00,00,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00
db 00,00,00,00,00,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,14,14,00,00,00,00,00,00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00

yu db 00,00,00,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,00,00,00,00,00,00,00
db 00,00,00,00,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,15,15,15,15,15,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,15,15,15,15,15,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,15,15,15,15,15,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,15,15,15,15,15,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,15,15,15,15,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,15,15,15,15,00,00,00,00,00,00,00,00,00,00,00
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,00
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,00


ta db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00
db 00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00
db 00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00
db 00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00
db 00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00
db 00,00,00,00,14,14,14,14,00,14,14,14,14,14,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00
db 00,00,14,14,14,00,00,00,00,00,00,14,14,14,14,14,14,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00
db 00,00,14,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00


noba db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15

he db 00,00,00,00,00,00,00,00,00,00,00,00,00,15,15,15,15,15,15,15,15,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,15,15,15,15,15,00,00,00,00,00,15,15,15,15,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,15,15,15,15,15,00,00,00,00,00,00,00,00,00,00,00,15,15,15,15,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,15,15,15,15,15,15,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,15,15,15,15,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 15,15,15,15,15,15,15,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,15,15,15,15,15,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,15,15,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,15,15,15,15,15,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,15,15,15,15,15,15,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,15,15,15,15,15,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,15,15,15,15,15,15,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,15,15,15,15,15,15,15,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,15,15,15,15,15,15,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,15,15,15,15,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,15,00


yo db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,14,14,14,14,14,14,14,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,14,14,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 14,14,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00
db 14,14,14,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00
db 00,14,14,14,00,00,00,00,00,00,14,14,14,14,14,14,00,00,00,14,14,14,14,14,14,14,14,00,00,00,00
db 00,00,14,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,14,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,00

u db 00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00
db 00,00,00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,00,00,00
db 00,00,00,00,14,14,14,14,14,00,00,00,00,00,00,00,00,14,14,14,00,00
db 00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,14,14,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,14,14,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,14,14,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,14,14,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,14,00,00,00,00,00,00,00,00,00,00,00,00,00

ko db 00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,00

so db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,00,00,14,14,14,14,14,00,00,00,00,00,00,00
db 00,00,00,00,00,14,14,14,14,14,14,14,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,14,14,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,00,00,00
db 00,00,00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,14,00
db 00,00,00,00,00,14,14,14,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,14,14,14,00,00,00,00,00
db 00,00,00,14,14,14,00,00,00,00,00,00,14,14,14,14,14,14,00,00,14,14,14,00,00,00,00,00,00,00,00
db 14,14,14,14,00,00,14,14,14,14,14,14,14,14,00,00,00,00,00,14,14,00,00,00,00,00,00,00,00,00,00
db 00,14,14,14,14,14,14,14,14,00,00,00,00,00,00,00,00,14,14,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,14,14,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,14,14,14,14,00,00,00,00


bikkuri db 00,00,00,00,15,00,00,00
db 00,00,00,15,15,15,00,00
db 00,00,00,15,15,15,00,00
db 00,00,15,15,15,15,15,00
db 00,00,15,15,15,15,15,00
db 00,00,15,15,15,15,15,00
db 00,00,15,15,15,15,15,00
db 00,00,15,15,15,15,15,00
db 00,00,15,15,15,15,15,00
db 00,00,15,15,15,15,15,00
db 00,00,15,15,15,15,15,00
db 00,00,15,15,15,15,15,00
db 00,00,15,15,15,15,15,00
db 00,00,15,15,15,15,15,00
db 00,00,00,15,15,15,00,00
db 00,00,00,15,15,15,00,00
db 00,00,00,00,15,00,00,00
db 00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00
db 00,00,00,00,15,00,00,00
db 00,00,00,15,15,15,00,00
db 00,00,00,15,15,15,00,00
db 00,00,00,00,15,00,00,00


gameboy db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,15
db 15,15,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,15
db 15,15,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,15
db 15,15,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,15
db 15,15,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,15
db 15,15,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,04,04,04,07,07,07,07,15
db 15,15,07,07,07,07,07,07,07,08,08,08,08,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,04,04,04,04,04,07,07,07,15
db 15,15,07,07,07,07,07,07,07,08,08,08,08,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,04,04,04,04,07,07,07,04,04,04,07,07,07,07,15
db 15,15,07,07,07,07,08,08,08,08,08,08,08,08,08,08,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,04,04,04,04,04,04,07,07,07,07,07,07,07,07,07,15
db 15,15,07,07,07,07,08,08,08,08,08,08,08,08,08,08,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,04,04,04,04,07,07,07,07,07,07,07,07,07,07,15
db 15,15,07,07,07,07,07,07,07,08,08,08,08,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,15
db 15,15,07,07,07,07,07,07,07,08,08,08,08,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,15
db 15,15,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,15
db 15,15,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,08,08,08,08,08,07,07,08,08,08,08,08,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,15
db 15,15,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,15
db 15,15,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,15
db 15,15,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,15
db 15,15,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,07,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15
db 15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15


P_logo_for_perfect db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 00,00,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 00,00,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00
db 00,00,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00


E_logo_for_perfect db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00


R_logo_for_perfect db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 00,00,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00


F_logo_for_perfect db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,04,04,04,04,04,04
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00



C_logo_for_perfect db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,00


T_logo_for_perfect db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,00,00,04,04,04,04,04,04,04,00,00,04,04,04,04,04,04,00
db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00
db 00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00
db 00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00
db 00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00


left_art_for_perfect_red db 04,04,04,00,00,00,00
db 00,04,04,04,00,00,00
db 00,00,04,04,04,00,00
db 00,00,00,04,04,04,00
db 00,00,00,00,04,04,04
db 00,00,00,00,00,04,04

right_art_for_perfect_red db 00,00,00,00,04,04,04
db 00,00,00,04,04,04,00
db 00,00,04,04,04,00,00
db 00,04,04,04,00,00,00
db 04,04,04,00,00,00,00
db 04,04,00,00,00,00,00

middle_art_for_perfect_red db 00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00
db 00,04,04,04,04,04,00,00
db 04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,00
db 00,00,00,00,00,00,00,00

straight_art_for_perfect_red db 00,00,04,04,00
db 00,04,04,04,00
db 00,04,04,04,00
db 00,04,04,04,00
db 00,04,04,04,00
db 00,04,04,04,00
db 00,04,04,00,00


left_art_for_perfect_yellow db 14,14,14,00,00,00,00
db 00,14,14,14,00,00,00
db 00,00,14,14,14,00,00
db 00,00,00,14,14,14,00
db 00,00,00,00,14,14,14
db 00,00,00,00,00,14,14

right_art_for_perfect_yellow db 00,00,00,00,14,14,14
db 00,00,00,14,14,14,00
db 00,00,14,14,14,00,00
db 00,14,14,14,00,00,00
db 14,14,14,00,00,00,00
db 14,14,00,00,00,00,00

middle_art_for_perfect_yellow db 00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00
db 14,14,14,14,14,14,00,00
db 14,14,14,14,14,14,14,00
db 14,14,14,14,14,14,14,00
db 00,00,00,00,00,00,00,00

straight_art_for_perfect_yellow db 00,00,14,14,00
db 00,14,14,14,00
db 00,14,14,14,00
db 00,14,14,14,00
db 00,14,14,14,00
db 00,14,14,14,00
db 00,14,14,00,00


left_art_for_perfect_white db 15,15,15,00,00,00,00
db 00,15,15,15,00,00,00
db 00,00,15,15,15,00,00
db 00,00,00,15,15,15,00
db 00,00,00,00,15,15,15
db 00,00,00,00,00,15,15

right_art_for_perfect_white db 00,00,00,00,15,15,15
db 00,00,00,15,15,15,00
db 00,00,15,15,15,00,00
db 00,15,15,15,00,00,00
db 15,15,15,00,00,00,00
db 15,15,00,00,00,00,00

middle_art_for_perfect_white db 00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00
db 15,15,15,15,15,15,00,00
db 15,15,15,15,15,15,15,00
db 15,15,15,15,15,15,15,00
db 00,00,00,00,00,00,00,00

straight_art_for_perfect_white db 00,00,15,15,00
db 00,15,15,15,00
db 00,15,15,15,00
db 00,15,15,15,00
db 00,15,15,15,00
db 00,15,15,15,00
db 00,15,15,00,00


G_logo_for_gameover db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 04,04,04,04,04,04,04,00,00,00,00,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,00,00,00,00,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,00,00,00,00,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,04,04,04,04,04,04,00
db 00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,00,00,00,04,04,04,04,00


A_logo_for_gameover db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00
db 00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00
db 00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00
db 00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00
db 00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00
db 00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04

M_logo_for_gameover db 04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,00,04,04,04,04,04,04,00,04,04,04,04,04,04,00,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,00,00,04,04,04,04,04,04,04,04,04,04,04,00,00,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,00,00,00,04,04,04,04,04,04,04,04,04,00,00,00,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04
db 04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04


E_logo_for_gameover db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00


O_logo_for_gameover db 00,00,00,00,00,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00
db 00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00
db 00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,00,00,00,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,00,00,00,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00
db 00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00
db 00,00,00,00,00,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00


V_logo_for_gameover db 04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,00
db 00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00
db 00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00
db 00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00
db 00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00
db 00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00
db 00,00,00,00,00,00,04,04,04,04,04,04,04,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,04,04,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00
db 00,00,00,00,00,00,00,00,00,00,00,00,04,04,04,00,00,00,00,00,00,00,00,00,00,00,00,00


R_logo_for_gameover db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00
db 04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00,00
db 00,00,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,04,00,00
db 00,00,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 00,00,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00
db 04,04,04,04,04,04,04,04,00,00,00,00,00,04,04,04,04,04,04,04,00

		
xi dw 0
xf dw 0
yi dw 0
yf dw 0



.CODE

    mov ax, @data
    mov ds, ax


mov ah,3dh                         							;Opening File containing data about player
mov dx,offset file_name
mov al,2
int 21h
mov file_handle,ax

    ; Set video mode
    mov ax, 13h
    int 10h

call nihongo										;Functions to display JAPANESE

mov ah,02
mov bh,00
mov dh,22
mov dl,1h
int 10h


mov dx, offset display_press_anybutton							;Displaying press_anybutton option 
mov ah,09
int 21h

mov ah,01
int 21h



											;MAIN PAGE starts from here

back_to_previous_page:
taking_name_again:
    mov value_for_background,0


mov ax, 3			      							; Clearing entire screen
int 10h

mov ax, 13h                      							; Set video mode     
    int 10h

    int 10h
mov ah, 6                                                           			;coloring background
mov al, 0
mov bh, value_for_background     					
mov ch, 0     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 24     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h
	call logo									; Calling function to display main logo 


mov temp_to_store_num_of_char,0

mov ah,02
mov bh,00
mov dh,10
mov dl,9
int 10h

mov dx, offset display_text_for_name       						;Asking user to input name
mov ah,09h
int 21h



mov si,offset array_to_store_name

mov cx,0
inputname:

mov ah,01
int 21h

cmp al,13
je enterpressed
inc cx
mov [si],al
inc si
inc temp_to_store_num_of_char
jmp inputname

enterpressed:



mov ah,40h                                      					;Writing file
mov bx,file_handle
mov dx,offset array_to_store_name
mov cx,temp_to_store_num_of_char
int 21h

taking_input_again:

mov ax, 3			      							; Clearing entire screen
int 10h

mov ax, 13h                           
    int 10h

mov ah, 6                                                           			;coloring background
mov al, 0
mov bh, value_for_background     					
mov ch, 0     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 24     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h

mov ah,02
mov bh,00
mov dh,1
mov dl,1h
int 10h

mov dx,offset text_to_show_back_button                    				;Displaying back option
mov ah,09
int 21h

call logo										;Calling Funtion to print main logo

mov ah,02
mov bh,00
mov dh,11
mov dl,0Bh
int 10h

mov dx, offset display_player_name       						;Displaying user name
mov ah,09h
int 21h


mov si,offset array_to_store_name
mov cx,temp_to_store_num_of_char

printing:                          							;Loop for Displaying player name

mov dl,[si]
mov ah,02
int 21h

inc si
loop printing

mov ah,02
mov bh,00
mov dh,14
mov dl,1h
int 10h

mov dx, offset display_confirmation_stat       						;Displaying confirmation statement for player's user name 
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,16
mov dl,0Bh
int 10h

mov dx, offset display_yes_state       							;Displaying YES Statement 
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,18
mov dl,0Bh
int 10h

mov dx, offset display_no_state       							;Displaying NO Statement
mov ah,09h
int 21h


mov ah,01										;Taking input
int 21h

cmp al,'n'										;comparing input
je taking_name_again
cmp al,'b'
je taking_name_again
cmp al,'y'
je moving_to_next_page
jmp taking_input_again

	
										;2 PAGE starts from here
moving_to_next_page:
back_to_menu:

mov ax, 3h                           							;Clearing entire screen
    int 10h


mov ax, 13h                           							;video mode
    int 10h

mov ah, 6                                                           			;coloring background
mov al, 0
mov bh, value_for_background     					
mov ch, 0     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 24     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h

mov ah,02
mov bh,00
mov dh,1
mov dl,1h
int 10h

mov dx,offset text_to_show_back_button                    				;Displaying back option
mov ah,09
int 21h

call logo

mov cx,temp_to_store_num_of_char

mov si,offset array_to_store_name

mov ah,02
mov bh,00
mov dh,1h
mov dl,18h
int 10h

mov dx,offset display_account                           				;Displaying account 
mov ah,09
int 21h

mov ah,02
mov bh,00
mov dh,1h
mov dl,21h
int 10h

printing_name:                                          				;Loop for Displaying player name

mov dl,[si]
mov ah,02
int 21h

inc si
loop printing_name






mov ah,02
mov bh,00
mov dh,11
mov dl,0Bh
int 10h

mov dx, offset text_to_show_start_option                 				;Displaying Start option
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,13
mov dl,0Bh
int 10h

mov dx, offset text_to_show_level_option                   				;Displaying Level option
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,15
mov dl,0Bh
int 10h

mov dx, offset text_to_show_setting_option             					;Displaying Setting option
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,17
mov dl,0Bh
int 10h

mov dx, offset text_to_show_exit_option               					;Displaying Exit option
mov ah,09h
int 21h

mov ah,01				              					;Taking input
int 21h


cmp al,'b'										;comparing input
je back_to_previous_page
cmp al,'y'
je jump_to_game_start_page
cmp al,'l'
je jump_to_level_page
cmp al,'s'
je jump_to_setting_page
cmp al,'e'
je outt

jump_to_level_page:					     				;Displaying Level page

mov ax, 3h                                                   				;Clearing entire screen
    int 10h


mov ax, 13h                                                  				;video mode
    int 10h

mov ah, 6                                                           			;coloring background
mov al, 0
mov bh, value_for_background     							
mov ch, 0     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 24     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h


call select_level_logo									;Function to print SELECT logo
call emoji_logo										;Function to display emoji


mov ah,02
mov bh,00
mov dh,1
mov dl,1h
int 10h

mov dx,offset text_to_show_back_button                    				;Displaying back option
mov ah,09
int 21h

mov ah,02
mov bh,00
mov dh,11
mov dl,0Bh
int 10h

mov dx, offset display_level_1                           				;Displaying Level1 option
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,14
mov dl,0Bh
int 10h

mov dx, offset display_level_2                          				;Displaying Level2 option
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,17
mov dl,0Bh
int 10h

mov dx, offset display_level_3                         					;Displaying Level3 option
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,20
mov dl,0Bh
int 10h

mov dx, offset display_level_bonus                         				;Displaying Level_bonus option
mov ah,09h
int 21h


mov ah,01										;Taking input
int 21h

cmp al,'b'
je back_to_menu
cmp al,'1'
je store_1_to_level_number
cmp al,'2'
je store_2_to_level_number
cmp al,'3'
je store_3_to_level_number
jmp jump_to_level_page

store_1_to_level_number:
mov level_number,1
jmp back_to_menu

store_2_to_level_number:
mov level_number,2
jmp back_to_menu

store_3_to_level_number:
mov level_number,3
jmp back_to_menu


jump_to_setting_page:				              				;Displaying Setting page

mov ax, 3h                                                   				;Clearing entire screen
    int 10h


mov ax, 13h                                                  				;video mode
    int 10h

mov ah, 6                                                           			;coloring background
mov al, 0
mov bh, value_for_background     					
mov ch, 0     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 24     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h


call setting_logo									; Calling function to display setting logo

mov si, offset gameboy	;draw 
					mov yi, 143
					mov yf, 165
					mov xi, 135
					mov xf, 183 
					call draw					;Function printing gameboy

mov ah,02
mov bh,00
mov dh,1
mov dl,1h
int 10h

mov dx,offset text_to_show_back_button                    				;Displaying back option
mov ah,09
int 21h

mov ah,02
mov bh,00
mov dh,11
mov dl,5h
int 10h

mov dx, offset text_to_show_control_option_in_setting                           	;Displaying control option in settings
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,14
mov dl,5h
int 10h

mov dx, offset text_to_show_change_color_option_in_setting                          	;Displaying change background color option
mov ah,09h
int 21h

mov ah,01					
int 21h
		
cmp al,'c'										;Comparing input
je show_game_control_screen
cmp al,'v'
je show_options_to_change_background_color
cmp al,'b'
je back_to_menu
jmp jump_to_setting_page


show_game_control_screen:

mov ax, 3h                                                   				;Clearing entire screen
    int 10h


mov ax, 13h                                                  				;video mode
    int 10h

mov ah, 6                                                           			;coloring background
mov al, 0
mov bh, value_for_background     					
mov ch, 0     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 24     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h

call controls_logo									;calling function to print control logo


mov ah,02
mov bh,00
mov dh,1
mov dl,1h
int 10h

mov dx,offset text_to_show_back_button                    				;Displaying back option
mov ah,09
int 21h


mov si, offset text_to_display_setting_action       					;Printing colored text ('ACTIONS')
    mov dh, 8            ; Row
    mov dl, 6         ; Column

    mov cx,7
    printname:                          
        mov al, [si]          ; Load character to print
        mov ah, 02h           ; Set function to set cursor position
        mov bh, 0             ; Page number (default to 0)
        int 10h               ; Set cursor position

        mov bl, 1100b         ; Text attribute (light cyan on black background)
        mov ah, 09h           ; Set function to display character and attribute
        inc dl
        int 10h               ; Display character with specified attribute

        inc si                ; Move to next character
        loop printname


mov si, offset text_to_display_setting_controls       					;Printing colored text ('CONTROLS')
    mov dh, 8            ; Row
    mov dl, 19         ; Column

    mov cx,12
    printname1:                          
        mov al, [si]          ; Load character to print
        mov ah, 02h           ; Set function to set cursor position
        mov bh, 0             ; Page number (default to 0)
        int 10h               ; Set cursor position

        mov bl, 1100b         ; Text attribute (light cyan on black background)
        mov ah, 09h           ; Set function to display character and attribute
        inc dl
        int 10h               ; Display character with specified attribute

        inc si                ; Move to next character
        loop printname1



mov si, offset y_for_controls	 							;Drawing Line for action(below action) 
					mov yi, 74
					mov yf, 76
					mov xi, 48
					mov xf, 76 
					call draw

mov si, offset y_for_controls	;draw 
					mov yi, 74
					mov yf, 76
					mov xi, 76
					mov xf, 104 
					call draw

mov si, offset y_for_controls	 							;Drawing Line for KEY BINDINGS(below KEY BINDINGS)
					mov yi, 74
					mov yf, 76
					mov xi, 152
					mov xf, 180 
					call draw

mov si, offset y_for_controls	 							;Drawing Line for KEY BINDINGS(below KEY BINDINGS)
					mov yi, 74
					mov yf, 76
					mov xi, 180
					mov xf, 208 
					call draw

mov si, offset y_for_controls	 							;Drawing Line for KEY BINDINGS(below KEY BINDINGS)
					mov yi, 74
					mov yf, 76
					mov xi, 208
					mov xf, 236 
					call draw

mov si, offset y_for_underline	 							;Drawing Line for KEY BINDINGS(below KEY BINDINGS)
					mov yi, 74
					mov yf, 76
					mov xi, 236
					mov xf, 248 
					call draw





mov ah,02
mov bh,00
mov dh,12
mov dl,6
int 10h

mov dx, offset text_to_display_setting_up                          			;Displaying control up
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,14
mov dl,6
int 10h

mov dx, offset text_to_display_setting_down                          			;Displaying control down
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,16
mov dl,6
int 10h

mov dx, offset text_to_display_setting_left                          			;Displaying control left
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,18
mov dl,6
int 10h

mov dx, offset text_to_display_setting_right                          			;Displaying control right
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,20
mov dl,6
int 10h

mov dx, offset text_to_display_setting_shoot                          			;Displaying control shoot
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,22
mov dl,6
int 10h

mov dx, offset text_to_display_setting_esc                          			;Displaying control esc
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,12
mov dl,19
int 10h

mov dx, offset text_to_display_setting_option_up                          		;Displaying keybind of up
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,14
mov dl,19
int 10h

mov dx, offset text_to_display_setting_option_down                          		;Displaying keybind of down
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,16
mov dl,19
int 10h

mov dx, offset text_to_display_setting_option_left                          		;Displaying keybind of left
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,18
mov dl,19
int 10h

mov dx, offset text_to_display_setting_option_right                          		;Displaying keybind of right
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,20
mov dl,19
int 10h

mov dx, offset text_to_display_setting_option_shoot                          		;Displaying keybind of shoot
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,22
mov dl,19
int 10h

mov dx, offset text_to_display_setting_option_esc                          		;Displaying keybind of esc
mov ah,09h
int 21h

mov ah,01
int 21h

cmp al,'b'
je jump_to_setting_page
jmp show_game_control_screen



show_options_to_change_background_color:						;Displaying different colors loop starting change_background_color

mov ax, 3h                                                   				;Clearing entire screen
    int 10h


mov ax, 13h                                                  				;video mode
    int 10h

mov ah, 6                                                           			;coloring background
mov al, 0
mov bh, value_for_background     					
mov ch, 0     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 25     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h
call select_color_logo                                       				;calling select color logo
call color_option					     				;calling function which displays available colors to users

mov ah,01
int 21h

cmp al,'b'
je jump_to_setting_page
cmp al,'0'										;comparing which color is selected
je black_background
cmp al,'1'
je blue_background
cmp al,'2'
je green_background
cmp al,'3'
je cyan_background
cmp al,'4'
je red_background
cmp al,'5'
je magenta_background
cmp al,'6'
je brown_background
cmp al,'7'
je lightgray_background
cmp al,'8'
je darkgray_background
cmp al,'9'
je lightblue_background
cmp al,'A'
je lightgreen_background
cmp al,'B'
je lightcyan_background
cmp al,'C'
je lightred_background
cmp al,'D'
je lightmagenta_background
cmp al,'E'
je yellow_background
cmp al,'F'
je white_background

jmp show_options_to_change_background_color

black_background:									;setting background to black
mov value_for_background,0							
jmp show_options_to_change_background_color

blue_background:									;setting background to blue
mov value_for_background,1
jmp show_options_to_change_background_color

green_background:									;setting background to green
mov value_for_background,2
jmp show_options_to_change_background_color

cyan_background:									;setting background to cyan
mov value_for_background,3
jmp show_options_to_change_background_color

red_background:										;setting background to red
mov value_for_background,4
jmp show_options_to_change_background_color

magenta_background:									;setting background to magenta
mov value_for_background,5
jmp show_options_to_change_background_color

brown_background:									;setting background to brown
mov value_for_background,6
jmp show_options_to_change_background_color

lightgray_background:									;setting background to lightgray
mov value_for_background,7
jmp show_options_to_change_background_color

darkgray_background:									;setting background to darkgray
mov value_for_background,8
jmp show_options_to_change_background_color

lightblue_background:									;setting background to lightblue
mov value_for_background,9
jmp show_options_to_change_background_color

lightgreen_background:									;setting background to lightgreen
mov value_for_background,10
jmp show_options_to_change_background_color

lightcyan_background:									;setting background to lightcyan
mov value_for_background,11
jmp show_options_to_change_background_color

lightred_background:									;setting background to lightred
mov value_for_background,12
jmp show_options_to_change_background_color

lightmagenta_background:								;setting background to lightmagenta
mov value_for_background,13
jmp show_options_to_change_background_color

yellow_background:									;setting background to yellow
mov value_for_background,14
jmp show_options_to_change_background_color

white_background:									;setting background to white
mov value_for_background,15
jmp show_options_to_change_background_color



jmp outt

jump_to_game_start_page:
restart_game:
call restart_everything
mov ax, 3h                                                   		;Clearing entire screen
    int 10h

									;Game_Start PAGE

mov ax, 13h                                                  		;video mode
    int 10h



mov ah,02
mov bh,00
mov dh,11
mov dl,0Bh
int 10h

mov dx, offset text_to_show_game_start_button                		;Displaying Game Start option
mov ah,09h
int 21h

mov ah,01
int 21h

cmp al,13
je start_game
cmp al,27
je esc_pressed


start_game:                                                  		;Game Starts

mov ax, 3h                                                   		;Clearing entire screen
    int 10h


mov ax, 13h                                                  		;video mode
    int 10h
						   

mov ah, 6								;coloring background green
mov al, 0
mov bh, 2     ;color
mov ch, 18     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 24     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h

call show_magazine							;Calling functions
call show_bullet1
call show_bullet2
call show_bullet3
;call show_ducklife_border
;call show_ducklive1
;call show_ducklive2
;call show_ducklive3
;call show_ducklive4
;call show_ducklive5
;call show_ducklive6
call show_score
call first_digit
call second_digit
call third_digit
call fourth_digit
call fifth_digit

cmp number_of_level,1
je print_level_1
;cmp number_of_level,2
;je print_level_2
;cmp number_of_level,3
;je print_level_3

print_level_1:
call show_ducklife_border_2
call show_ducklive1_2
call show_ducklive2_2
call show_ducklive3_2
call show_ducklive4_2
call show_ducklive5_2
call show_ducklive6_2
call show_ducklive7_2
call show_ducklive8_2
jmp ouch

print_level_2:






ouch:

mov x_initial_duck , 270										;variables to store coordinate of ducks
mov x_final_duck , 290
mov y_initial_duck , 121
mov y_final_duck , 143
mov bottom_to_leftup,1



drawPixel:							    ;Loop for cursor movement

mov ah, 6                                                           ;coloring background light cyan
mov al, 0
mov bh, 11     ;color
mov ch, 0     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 17     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h

cmp temp_for_hit,0
je no_key_pressed
  mov cx, 13H            ;High End
        mov dx, 0A120h        ;Low End
        mov ah, 86H            ;Wait function
        int 15H

													;Random Function
call spawn_duck_random


no_key_pressed:


cmp x_initial_duck,0											;telling us where duck has reached
je duck_reached_left_side
cmp x_final_duck,320
je duck_reached_right_side
cmp y_initial_duck,0
je duck_reached_top_side
cmp y_final_duck,144
je duck_reached_bottom_side



cmp bottom_to_leftup , 1										;telling us next movement
je moving_bottom_to_leftup
cmp left_to_upright , 1 
je moving_left_to_upright
cmp top_to_rightdown , 1
je moving_top_to_rightdown
cmp bottom_to_rightup , 1
je moving_bottom_to_rightup
cmp right_to_upleft , 1
je moving_right_to_upleft
cmp top_to_leftdown , 1
je moving_top_to_leftdown
cmp left_to_downright , 1
je moving_left_to_downright
cmp right_to_downleft , 1
je moving_right_to_downleft




duck_reached_left_side:											; Duck reached left side

mov ax , temp_y_initial_coordinate
cmp y_initial_duck , ax
jb move_left_to_upright

call everything_zero
mov left_to_downright , 1										; making check from 0 to 1 to make duck move from left to rightdown
mov x_initial_duck , 1 
mov x_final_duck , 21
jmp drawPixel
		
move_left_to_upright:											; making check from 0 to 1 to make duck move from left to rightup
call everything_zero
mov left_to_upright , 1
mov x_initial_duck , 1 
mov x_final_duck , 21

jmp drawPixel
	



duck_reached_top_side:											
mov ax , temp_x_initial_coordinate
cmp x_initial_duck , ax
ja move_top_to_downright

call everything_zero											; making check from 0 to 1 to make duck move from top to leftdown
mov top_to_leftdown , 1
mov y_initial_duck , 1 
mov y_final_duck , 23
jmp drawPixel
		
move_top_to_downright:											; making check from 0 to 1 to make duck move from top to rightdown
call everything_zero
mov top_to_rightdown , 1
mov y_initial_duck , 1 
mov y_final_duck , 23

jmp drawPixel




duck_reached_bottom_side:										
mov ax , temp_x_initial_coordinate
cmp x_initial_duck , ax
ja move_bottom_to_upright

call everything_zero											; making check from 0 to 1 to make duck move from bottom to leftup
mov bottom_to_leftup , 1
mov y_initial_duck , 121 
mov y_final_duck , 143
jmp drawPixel

move_bottom_to_upright:											; making check from 0 to 1 to make duck move from bottom to rightup
call everything_zero
mov bottom_to_rightup , 1
mov y_initial_duck , 121
mov y_final_duck , 143

jmp drawPixel
		

		

duck_reached_right_side:
mov ax , temp_y_initial_coordinate
cmp y_initial_duck , ax
jb move_right_to_upleft

call everything_zero											; making check from 0 to 1 to make duck move from right to leftdown
mov right_to_downleft , 1
mov x_initial_duck , 299 
mov x_final_duck , 319
jmp drawPixel
		
move_right_to_upleft:											; making check from 0 to 1 to make duck move from right to leftup
call everything_zero
mov right_to_upleft , 1
mov x_initial_duck , 299 
mov x_final_duck , 319

jmp drawPixel





moving_bottom_to_leftup:										; moving duck from bottom to leftup
mov cx, 40000       ; Adjust this value to control the speed
delayLoop1:
    dec cx             ; Decrement the loop counter
    jnz delayLoop1      ; Continue looping until cx becomes zero
mov ax , x_initial_duck
mov temp_x_initial_coordinate , ax
mov ax , x_final_duck
mov temp_x_final_coordinate , ax
mov ax , y_initial_duck
mov temp_y_initial_coordinate , ax
mov ax , y_final_duck
mov temp_y_final_coordinate , ax

dec x_initial_duck
dec x_final_duck
dec y_initial_duck
dec y_final_duck

jmp normal

	
		
moving_left_to_upright:											
mov cx, 40000       ; Adjust this value to control the speed
delayLoop2:
    dec cx             ; Decrement the loop counter
    jnz delayLoop2     ; Continue looping until cx becomes zero
mov ax , x_initial_duck
mov temp_x_initial_coordinate , ax
mov ax , x_final_duck
mov temp_x_final_coordinate , ax
mov ax , y_initial_duck
mov temp_y_initial_coordinate , ax
mov ax , y_final_duck
mov temp_y_final_coordinate , ax

inc x_initial_duck
inc x_final_duck
dec y_initial_duck
dec y_final_duck		

jmp normal


moving_top_to_rightdown:

mov cx, 40000       ; Adjust this value to control the speed
delayLoop3:
    dec cx             ; Decrement the loop counter
    jnz delayLoop3      ; Continue looping until cx becomes zero
mov ax , x_initial_duck
mov temp_x_initial_coordinate , ax
mov ax , x_final_duck
mov temp_x_final_coordinate , ax
mov ax , y_initial_duck
mov temp_y_initial_coordinate , ax
mov ax , y_final_duck
mov temp_y_final_coordinate , ax

inc x_initial_duck
inc x_final_duck
inc y_initial_duck
inc y_final_duck		

jmp normal

moving_bottom_to_rightup:

mov cx, 40000       ; Adjust this value to control the speed
delayLoop4:
    dec cx             ; Decrement the loop counter
    jnz delayLoop4      ; Continue looping until cx becomes zero
mov ax , x_initial_duck
mov temp_x_initial_coordinate , ax
mov ax , x_final_duck
mov temp_x_final_coordinate , ax
mov ax , y_initial_duck
mov temp_y_initial_coordinate , ax
mov ax , y_final_duck
mov temp_y_final_coordinate , ax

inc x_initial_duck
inc x_final_duck
dec y_initial_duck
dec y_final_duck		

jmp normal



moving_right_to_upleft:

mov cx, 40000       ; Adjust this value to control the speed
delayLoop5:
    dec cx             ; Decrement the loop counter
    jnz delayLoop5      ; Continue looping until cx becomes zero
mov ax , x_initial_duck
mov temp_x_initial_coordinate , ax
mov ax , x_final_duck
mov temp_x_final_coordinate , ax
mov ax , y_initial_duck
mov temp_y_initial_coordinate , ax
mov ax , y_final_duck
mov temp_y_final_coordinate , ax

dec x_initial_duck
dec x_final_duck
dec y_initial_duck
dec y_final_duck		

jmp normal


moving_top_to_leftdown:

mov cx, 40000       ; Adjust this value to control the speed
delayLoop6:
    dec cx             ; Decrement the loop counter
    jnz delayLoop6      ; Continue looping until cx becomes zero
mov ax , x_initial_duck
mov temp_x_initial_coordinate , ax
mov ax , x_final_duck
mov temp_x_final_coordinate , ax
mov ax , y_initial_duck
mov temp_y_initial_coordinate , ax
mov ax , y_final_duck
mov temp_y_final_coordinate , ax

dec x_initial_duck
dec x_final_duck
inc y_initial_duck
inc y_final_duck		

jmp normal


moving_left_to_downright:

mov cx, 40000       ; Adjust this value to control the speed
delayLoop7:
    dec cx             ; Decrement the loop counter
    jnz delayLoop7      ; Continue looping until cx becomes zero
mov ax , x_initial_duck
mov temp_x_initial_coordinate , ax
mov ax , x_final_duck
mov temp_x_final_coordinate , ax
mov ax , y_initial_duck
mov temp_y_initial_coordinate , ax
mov ax , y_final_duck
mov temp_y_final_coordinate , ax

inc x_initial_duck
inc x_final_duck
inc y_initial_duck
inc y_final_duck		

jmp normal


moving_right_to_downleft:

mov cx, 40000       ; Adjust this value to control the speed
delayLoop8:
    dec cx             ; Decrement the loop counter
    jnz delayLoop8      ; Continue looping until cx becomes zero
mov ax , x_initial_duck
mov temp_x_initial_coordinate , ax
mov ax , x_final_duck
mov temp_x_final_coordinate , ax
mov ax , y_initial_duck
mov temp_y_initial_coordinate , ax
mov ax , y_final_duck
mov temp_y_final_coordinate , ax

dec x_initial_duck
dec x_final_duck
inc y_initial_duck
inc y_final_duck		

jmp normal




normal:

mov si, offset duck_normal	;draw 
				mov ax, y_initial_duck
					mov yi, ax
				mov ax, y_final_duck
					mov yf, ax
				mov ax, x_initial_duck
					mov xi, ax
				mov ax, x_final_duck
					mov xf, ax
					call draw				;Calling function to print Duck
		


				call show_crosshair				;Calling function to print Crosshair

    

    mov cx, currentX                                      			; X-coordinate
    mov dx, currentY                                      			; Y-coordinate
    int 10h             

    

    mov ah, 01h                                           			; BIOS function to check for key press
    int 16h 
	
    jz no_key_pressed
mov ah,00h
int 16h

       
         

comparison:
	cmp al,13
	je enterpressed1
	cmp al,27
        je esc_pressed
        
	cmp al,'m'
	je outt

               
    cmp ah, 48h        								;comparing input with arrow keys
    je moveUp          
    cmp ah, 50h        
    je moveDown        
    cmp ah, 4Bh        
    je moveLeft        
    cmp ah, 4Dh        
    je moveRight       
    jmp drawPixel    
  
resume_game:
mov temp_resume,1
cmp temp_resume,0
je dont_print_green_background
mov ah, 6								;coloring background green
mov al, 0
mov bh, 2     ;color
mov ch, 18     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 24     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h

mov temp_resume,0
call show_magazine							;Calling functions
call show_bullet1
call show_bullet2
call show_bullet3
call show_ducklife_border
call show_ducklive1
call show_ducklive2
call show_ducklive3
call show_ducklive4
call show_ducklive5
call show_ducklive6
call show_score
call first_digit
call second_digit
call third_digit
call fourth_digit
call fifth_digit

dont_print_green_background:


jmp drawPixel


moveUp:
cmp temp_value_for_crosshair5,0
je drawPixel
    dec currentY                                      				; Move up by decrementing Y-coordinate
    dec temp_value_for_crosshair1
    dec temp_value_for_crosshair5
    dec temp_value_for_crosshair6
    dec temp_value_for_crosshair9
    dec temp_value_for_crosshair10
    dec center_point_of_crosshair_y
    jmp drawPixel      

moveDown:
cmp temp_value_for_crosshair10,144
je drawPixel
    inc currentY                                    				; Move down by incrementing Y-coordinate
    inc temp_value_for_crosshair1
    inc temp_value_for_crosshair5
    inc temp_value_for_crosshair6
    inc temp_value_for_crosshair9
    inc temp_value_for_crosshair10
    inc center_point_of_crosshair_y
    jmp drawPixel      

moveLeft:
cmp currentX,0
je drawPixel
    dec currentX                                    				; Move left by decrementing X-coordinate
    dec temp_value_for_crosshair2
    dec temp_value_for_crosshair3
    dec temp_value_for_crosshair4
    dec temp_value_for_crosshair7
    dec temp_value_for_crosshair8
    dec center_point_of_crosshair_x
    jmp drawPixel      

moveRight:
cmp temp_value_for_crosshair4,320
je drawPixel
    inc currentX                                   				; Move right by incrementing X-coordinate
    inc temp_value_for_crosshair2
    inc temp_value_for_crosshair3
    inc temp_value_for_crosshair4
    inc temp_value_for_crosshair7
    inc temp_value_for_crosshair8
    inc center_point_of_crosshair_x
    jmp drawPixel      




enterpressed1:
call enter_pressed_during_game							;Calling function as enter is pressed during game
cmp number_of_yellow_ducks,3
je perfect_score
cmp number_of_ducks_spawned,4
je gameover_screen
jmp drawPixel

gameover_screen:									;This runs when it is  gameover
call show_result

mov ah, 6                                                           			;coloring background
mov al, 0
mov bh, 00    							
mov ch, 0     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 10     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h

call gameover_logo

mov ah,01
int 21h

cmp al,13
je print_options
jmp gameover_screen

jmp outt

print_options:

mov ah, 6                                                           			;coloring background
mov al, 0
mov bh, 00    							
mov ch, 0     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 24     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h


mov ah,02
mov bh,00
mov dh,15
mov dl,0Bh
int 10h

mov dx,offset text_to_display_retry
mov ah,09
int 21h

mov ah,02
mov bh,00
mov dh,17
mov dl,0Bh
int 10h

mov dx,offset text_to_show_back_to_menu_option 
mov ah,09
int 21h

mov ah,02
mov bh,00
mov dh,19
mov dl,0Bh
int 10h

mov dx,offset text_to_show_exit_option_during_game
mov ah,09
int 21h



mov ah,01
int 21h

cmp al,'r'
je restart_game
cmp al,'f'
je back_to_menu
cmp al,'z'
je outt

jmp gameover_screen


perfect_score:										;This runs when player hits all ducks

call show_result									;Calling function to show result


;text_to_show_number_of_hits db 'HITS : $'
;text_to_show_number_of_score db 'SCORE : $'
;text_to_show_number_of_miss db 'MISS : $'

mov ah, 6                                                           			;coloring background
mov al, 0
mov bh, 00    							
mov ch, 0     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 12     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h

call perfect_page									;printing PERFECT on the screen
call first_blink
  mov cx, 12H            ;High End							;Timer
        mov dx, 0A120h        ;Low End
        mov ah, 86H            ;Wait function
        int 15H

mov ah, 6                                                           			;coloring background
mov al, 0
mov bh, 00    							
mov ch, 0     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 12     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h

call perfect_page
call second_blink
mov cx, 12H            ;High End
        mov dx, 0A120h        ;Low End
        mov ah, 86H            ;Wait function
        int 15H



mov ah, 6                                                           			;coloring background
mov al, 0
mov bh, 00    							
mov ch, 0     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 12     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h

call perfect_page
call first_blink
  mov cx, 12H            ;High End
        mov dx, 0A120h        ;Low End
        mov ah, 86H            ;Wait function
        int 15H

mov ah, 6                                                           			;coloring background
mov al, 0
mov bh, 00    							
mov ch, 0     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 14     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h

call perfect_page
call second_blink
mov cx, 12H            ;High End
        mov dx, 0A120h        ;Low End
        mov ah, 86H            ;Wait function
        int 15H
call proceed_to_next_round	

jmp outt

esc_pressed:

;Esc_during_game PAGE


mov ax, 3h                                                   			;Clearing entire screen
    int 10h


mov ax, 13h                                                  			;video mode
    int 10h

mov ah,02
mov bh,00
mov dh,11
mov dl,0Bh
int 10h

mov dx, offset text_to_show_resume_option                 			;Displaying Resume option
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,13
mov dl,0Bh
int 10h

mov dx, offset text_to_show_restart_option                   			;Displaying Restart option
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,15
mov dl,0Bh
int 10h

mov dx, offset text_to_show_back_to_menu_option            			;Displaying back to menu option
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,17
mov dl,0Bh
int 10h

mov dx, offset text_to_show_exit_option_during_game               		;Displaying Exit option
mov ah,09h
int 21h

mov ah,01				              				;Taking input
int 21h

cmp al,'y'									;comparing								
je resume_game
cmp al,'r'
je restart_game
cmp al,'f'
je back_to_menu
cmp al,'z'
je outt
cmp al,27
je resume_game

jmp esc_pressed



jmp outt




perfect_page proc										;Function to print perfect logo





mov si, offset P_logo_for_perfect	;draw 
					mov yi, 54
					mov yf, 70
					mov xi, 73
					mov xf, 93 
					call draw

mov si, offset E_logo_for_perfect	;draw 
					mov yi, 54
					mov yf, 70
					mov xi, 94
					mov xf, 117 
					call draw

mov si, offset R_logo_for_perfect	;draw 
					mov yi, 54
					mov yf, 70
					mov xi, 118
					mov xf, 139 
					call draw

mov si, offset F_logo_for_perfect	;draw 
					mov yi, 54
					mov yf, 70
					mov xi, 140
					mov xf, 162 
					call draw

mov si, offset E_logo_for_perfect	;draw 
					mov yi, 54
					mov yf, 70
					mov xi, 163
					mov xf, 186 
					call draw

mov si, offset C_logo_for_perfect	;draw 
					mov yi, 54
					mov yf, 70
					mov xi, 187
					mov xf, 209 
					call draw

mov si, offset T_logo_for_perfect	;draw 
					mov yi, 54
					mov yf, 70
					mov xi, 210
					mov xf, 234 
					call draw




ret
perfect_page endp


gameover_logo proc												;Function to print gameover logo


mov si, offset G_logo_for_gameover	;draw 
					mov yi, 34
					mov yf, 50
					mov xi, 63
					mov xf, 85 
					call draw


mov si, offset A_logo_for_gameover	;draw 
					mov yi, 34
					mov yf, 50
					mov xi, 86
					mov xf, 119 
					call draw

mov si, offset M_logo_for_gameover	;draw 
					mov yi, 34
					mov yf, 50
					mov xi, 120
					mov xf, 151 
					call draw



mov si, offset E_logo_for_gameover	;draw 
					mov yi, 34
					mov yf, 50
					mov xi, 152
					mov xf, 175 
					call draw


mov si, offset O_logo_for_gameover	;draw 
					mov yi, 34
					mov yf, 50
					mov xi, 183
					mov xf, 203
					call draw


mov si, offset V_logo_for_gameover	;draw 
					mov yi, 34
					mov yf, 50
					mov xi, 204
					mov xf, 232
					call draw

mov si, offset E_logo_for_gameover	;draw 
					mov yi, 34
					mov yf, 50
					mov xi, 233
					mov xf, 256
					call draw

mov si, offset R_logo_for_gameover	;draw 
					mov yi, 34
					mov yf, 50
					mov xi, 257
					mov xf, 278
					call draw



ret
gameover_logo endp


first_blink proc										;Function to print pattern_1 twinkles

mov si, offset right_art_for_perfect_red	;draw 
					mov yi, 40
					mov yf, 45
					mov xi, 247
					mov xf, 254 
					call draw

mov si, offset right_art_for_perfect_yellow	;draw 
					mov yi, 45
					mov yf, 50
					mov xi, 257
					mov xf, 264 
					call draw

mov si, offset right_art_for_perfect_red	;draw 
					mov yi, 70
					mov yf, 75
					mov xi, 65
					mov xf, 72 
					call draw

mov si, offset right_art_for_perfect_yellow	;draw 
					mov yi, 80
					mov yf, 85
					mov xi, 50
					mov xf, 57 
					call draw

mov si, offset middle_art_for_perfect_red	;draw 
					mov yi, 63
					mov yf, 68
					mov xi, 50
					mov xf, 58 
					call draw

mov si, offset middle_art_for_perfect_yellow	;draw 
					mov yi, 53
					mov yf, 58
					mov xi, 30
					mov xf, 38 
					call draw

mov si, offset right_art_for_perfect_red	;draw 
					mov yi, 85
					mov yf, 92
					mov xi, 30
					mov xf, 37 
					call draw


mov si, offset left_art_for_perfect_yellow	;draw 
					mov yi, 33
					mov yf, 38
					mov xi, 35
					mov xf, 42 
					call draw

mov si, offset left_art_for_perfect_red	;draw 
					mov yi, 30
					mov yf, 35
					mov xi, 45
					mov xf, 52 
					call draw

mov si, offset left_art_for_perfect_yellow	;draw 
					mov yi, 85
					mov yf, 90
					mov xi, 244
					mov xf, 251 
					call draw

mov si, offset left_art_for_perfect_red	;draw 
					mov yi, 82
					mov yf, 87
					mov xi, 250
					mov xf, 257 
					call draw

mov si, offset middle_art_for_perfect_red	;draw 
					mov yi, 53
					mov yf, 58
					mov xi, 252
					mov xf, 260
					call draw

mov si, offset middle_art_for_perfect_yellow	;draw 
					mov yi, 65
					mov yf, 70
					mov xi, 267
					mov xf, 275 
					call draw

mov si, offset straight_art_for_perfect_yellow	;draw 
					mov yi, 91
					mov yf, 98
					mov xi, 73
					mov xf, 78 
					call draw

mov si, offset straight_art_for_perfect_red	;draw 
					mov yi, 90
					mov yf, 97
					mov xi, 105
					mov xf, 110 
					call draw

mov si, offset straight_art_for_perfect_white	;draw 
					mov yi, 90
					mov yf, 97
					mov xi, 155
					mov xf, 160 
					call draw

mov si, offset straight_art_for_perfect_yellow	;draw 
					mov yi, 86
					mov yf, 93
					mov xi, 180
					mov xf, 185 
					call draw

mov si, offset straight_art_for_perfect_yellow	;draw 
					mov yi, 27
					mov yf, 34
					mov xi, 172
					mov xf, 177 
					call draw

mov si, offset straight_art_for_perfect_white	;draw 
					mov yi, 12
					mov yf, 19
					mov xi, 190
					mov xf, 195 
					call draw

mov si, offset straight_art_for_perfect_red	;draw 
					mov yi, 22
					mov yf, 29
					mov xi, 103
					mov xf, 108 
					call draw


mov si, offset straight_art_for_perfect_yellow	;draw 
					mov yi, 18
					mov yf, 25
					mov xi, 120
					mov xf, 125 
					call draw

ret
first_blink endp



second_blink proc										;Function to print pattern_2 twinkles

mov si, offset right_art_for_perfect_red	;draw 
					mov yi, 40
					mov yf, 45
					mov xi, 247
					mov xf, 254 
					call draw

mov si, offset right_art_for_perfect_yellow	;draw 
					mov yi, 45
					mov yf, 50
					mov xi, 257
					mov xf, 264 
					call draw

mov si, offset left_art_for_perfect_yellow	;draw 
					mov yi, 33
					mov yf, 38
					mov xi, 35
					mov xf, 42 
					call draw

mov si, offset left_art_for_perfect_red	;draw 
					mov yi, 30
					mov yf, 35
					mov xi, 45
					mov xf, 52 
					call draw

mov si, offset left_art_for_perfect_yellow	;draw 
					mov yi, 85
					mov yf, 90
					mov xi, 244
					mov xf, 251 
					call draw

mov si, offset left_art_for_perfect_red	;draw 
					mov yi, 82
					mov yf, 87
					mov xi, 250
					mov xf, 257 
					call draw

mov si, offset right_art_for_perfect_red	;draw 
					mov yi, 70
					mov yf, 75
					mov xi, 65
					mov xf, 72 
					call draw

mov si, offset right_art_for_perfect_yellow	;draw 
					mov yi, 80
					mov yf, 85
					mov xi, 50
					mov xf, 57 
					call draw


mov si, offset straight_art_for_perfect_yellow	;draw 
					mov yi, 91
					mov yf, 98
					mov xi, 73
					mov xf, 78 
					call draw

mov si, offset straight_art_for_perfect_red	;draw 
					mov yi, 90
					mov yf, 97
					mov xi, 105
					mov xf, 110 
					call draw

mov si, offset straight_art_for_perfect_white	;draw 
					mov yi, 100
					mov yf, 107
					mov xi, 124
					mov xf, 129 
					call draw

mov si, offset straight_art_for_perfect_yellow	;draw 
					mov yi, 79
					mov yf, 86
					mov xi, 143
					mov xf, 148 
					call draw

mov si, offset straight_art_for_perfect_white	;draw 
					mov yi, 90
					mov yf, 97
					mov xi, 155
					mov xf, 160 
					call draw

mov si, offset straight_art_for_perfect_red	;draw 
					mov yi, 107
					mov yf, 114
					mov xi, 170
					mov xf, 175 
					call draw

mov si, offset straight_art_for_perfect_yellow	;draw 
					mov yi, 86
					mov yf, 93
					mov xi, 180
					mov xf, 185 
					call draw


mov si, offset straight_art_for_perfect_white	;draw 
					mov yi, 25
					mov yf, 32
					mov xi, 85
					mov xf, 90 
					call draw


mov si, offset straight_art_for_perfect_red	;draw 
					mov yi, 22
					mov yf, 29
					mov xi, 103
					mov xf, 108 
					call draw


mov si, offset straight_art_for_perfect_yellow	;draw 
					mov yi, 18
					mov yf, 25
					mov xi, 120
					mov xf, 125 
					call draw

mov si, offset straight_art_for_perfect_white	;draw 
					mov yi, 28
					mov yf, 35
					mov xi, 133
					mov xf, 138 
					call draw


mov si, offset straight_art_for_perfect_red	;draw 
					mov yi, 15
					mov yf, 22
					mov xi, 150
					mov xf, 155 
					call draw

mov si, offset straight_art_for_perfect_yellow	;draw 
					mov yi, 27
					mov yf, 34
					mov xi, 172
					mov xf, 177 
					call draw

mov si, offset straight_art_for_perfect_white	;draw 
					mov yi, 12
					mov yf, 19
					mov xi, 190
					mov xf, 195 
					call draw

mov si, offset straight_art_for_perfect_red	;draw 
					mov yi, 30
					mov yf, 37
					mov xi, 230
					mov xf, 235 
					call draw

mov si, offset straight_art_for_perfect_white	;draw 
					mov yi, 100
					mov yf, 107
					mov xi, 220
					mov xf, 225 
					call draw

mov si, offset straight_art_for_perfect_yellow	;draw 
					mov yi, 24
					mov yf, 31
					mov xi, 217
					mov xf, 222 
					call draw

ret
second_blink endp


proceed_to_next_round proc								;Prints proceed to next round statement
	
mov ax, 3h                                                   				;Clearing entire screen
    int 10h


mov ax, 13h                                                  				;video mode
    int 10h

mov ah,02
mov bh,00
mov dh,10
mov dl,7
int 10h

mov dx,offset display_proceed_to_next_round 
mov ah,09
int 21h


mov ah,02
mov bh,00
mov dh,10
mov dl,31
int 10h
mov dx,offset display_dot 
mov ah,09
int 21h

mov cx, 12H            ;High End
        mov dx, 0A120h        ;Low End
        mov ah, 86H            ;Wait function
        int 15H

mov ax, 3h                                                   				;Clearing entire screen
    int 10h


mov ax, 13h                                                  				;video mode
    int 10h

mov ah,02
mov bh,00
mov dh,10
mov dl,7
int 10h
mov dx,offset display_proceed_to_next_round 
mov ah,09
int 21h


mov ah,02
mov bh,00
mov dh,10
mov dl,32
int 10h
mov dx,offset display_dot 
mov ah,09
int 21h

mov cx, 12H            ;High End
        mov dx, 0A120h        ;Low End
        mov ah, 86H            ;Wait function
        int 15H
mov ax, 3h                                                   				;Clearing entire screen
    int 10h


mov ax, 13h                                                  				;video mode
    int 10h

mov ah,02
mov bh,00
mov dh,10
mov dl,7
int 10h
mov dx,offset display_proceed_to_next_round 
mov ah,09
int 21h


mov ah,02
mov bh,00
mov dh,10
mov dl,33
int 10h
mov dx,offset display_dot 
mov ah,09
int 21h

mov cx, 12H            ;High End
        mov dx, 0A120h        ;Low End
        mov ah, 86H            ;Wait function
        int 15H

mov ax, 3h                                                   				;Clearing entire screen
    int 10h


mov ax, 13h                                                  				;video mode
    int 10h

mov ah,02
mov bh,00
mov dh,10
mov dl,7
int 10h

mov dx,offset display_proceed_to_next_round 
mov ah,09
int 21h


mov ah,02
mov bh,00
mov dh,10
mov dl,31
int 10h
mov dx,offset display_dot 
mov ah,09
int 21h

mov cx, 12H            ;High End
        mov dx, 0A120h        ;Low End
        mov ah, 86H            ;Wait function
        int 15H

mov ax, 3h                                                   				;Clearing entire screen
    int 10h


mov ax, 13h                                                  				;video mode
    int 10h

mov ah,02
mov bh,00
mov dh,10
mov dl,7
int 10h
mov dx,offset display_proceed_to_next_round 
mov ah,09
int 21h


mov ah,02
mov bh,00
mov dh,10
mov dl,32
int 10h
mov dx,offset display_dot 
mov ah,09
int 21h

mov cx, 12H            ;High End
        mov dx, 0A120h        ;Low End
        mov ah, 86H            ;Wait function
        int 15H
mov ax, 3h                                                   				;Clearing entire screen
    int 10h


mov ax, 13h                                                  				;video mode
    int 10h

mov ah,02
mov bh,00
mov dh,10
mov dl,7
int 10h
mov dx,offset display_proceed_to_next_round 
mov ah,09
int 21h


mov ah,02
mov bh,00
mov dh,10
mov dl,33
int 10h
mov dx,offset display_dot 
mov ah,09
int 21h

mov cx, 12H            ;High End
        mov dx, 0A120h        ;Low End
        mov ah, 86H            ;Wait function
        int 15H

proceed_to_next_round endp


color_option proc								;Function to print many options of color

mov ah,02
mov bh,00
mov dh,1
mov dl,1h
int 10h

mov dx,offset text_to_show_back_button                    			;Displaying back option
mov ah,09
int 21h

mov ah,02
mov bh,00
mov dh,7
mov dl,2h
int 10h

mov dx, offset text_to_display_black_color                          		;Displaying black color option in settings
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,9
mov dl,2h
int 10h

mov dx, offset text_to_display_blue_color                          		;Displaying blue color option in settings
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,11
mov dl,2h
int 10h

mov dx, offset text_to_display_green_color                          		;Displaying green color option in settings
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,13
mov dl,2h
int 10h

mov dx, offset text_to_display_cyan_color                          		;Displaying cyan color option in settings
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,15
mov dl,2h
int 10h

mov dx, offset text_to_display_red_color                         		 ;Displaying red color option in settings
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,17
mov dl,2h
int 10h

mov dx, offset text_to_display_magenta_color                          		;Displaying magenta color option in settings
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,19
mov dl,2h
int 10h

mov dx, offset text_to_display_brown_color                         		 ;Displaying brown color option in settings
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,21
mov dl,2h
int 10h

mov dx, offset text_to_display_lightgray_color                          	;Displaying light gray color option in settings
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,7
mov dl,14h
int 10h

mov dx, offset text_to_display_darkgray_color                          		;Displaying dark gray color option in settings
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,9
mov dl,14h
int 10h

mov dx, offset text_to_display_lightblue_color                          	;Displaying light blue color option in settings
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,11
mov dl,14h
int 10h

mov dx, offset text_to_display_lightgreen_color                         	 ;Displaying light green color option in settings
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,13
mov dl,14h
int 10h

mov dx, offset text_to_display_lightcyan_color                          	;Displaying light cyan color option in settings
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,15
mov dl,14h
int 10h

mov dx, offset text_to_display_lightred_color                          		;Displaying light red color option in settings
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,17
mov dl,14h
int 10h

mov dx, offset text_to_display_lightmagenta_color                          	;Displaying light magenta color option in settings
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,19
mov dl,14h
int 10h

mov dx, offset text_to_display_yellow_color                          		;Displaying yellow color option in settings
mov ah,09h
int 21h

mov ah,02
mov bh,00
mov dh,21
mov dl,14h
int 10h

mov dx, offset text_to_display_white_color                          		;Displaying white color option in settings
mov ah,09h
int 21h


ret
color_option endp


nihongo proc									;Function to print JAPANESE

mov si, offset dada	;draw 
					mov yi, 30
					mov yf, 52
					mov xi, 10
					mov xf, 53 
					call draw

mov si, offset tsu
					mov yi, 40
					mov yf, 53
					mov xi, 38
					mov xf, 56
					call draw

mov si, offset ku
					mov yi, 30
					mov yf, 51
					mov xi, 58
					mov xf, 92
					call draw

mov si, offset shi
					mov yi, 30
					mov yf, 51
					mov xi, 102
					mov xf, 149
					call draw

mov si, offset yu
					mov yi, 40
					mov yf, 50
					mov xi, 145
					mov xf, 173
					call draw

mov si, offset noba	;draw 
					mov yi, 44
					mov yf, 46
					mov xi, 173
					mov xf, 206
					call draw

mov si, offset ta	;draw 
					mov yi, 30
					mov yf, 52
					mov xi, 206
					mov xf, 239
					call draw

mov si, offset noba	;draw 
					mov yi, 44
					mov yf, 46
					mov xi, 231
					mov xf, 262
					call draw


mov si, offset he	;draw 
					mov yi, 90
					mov yf, 103
					mov xi, 100
					mov xf, 149
					call draw

mov si, offset yo	;draw 
					mov yi, 130
					mov yf, 153
					mov xi, 160
					mov xf, 191
					call draw

mov si, offset u	;draw 
					mov yi, 130
					mov yf, 155
					mov xi, 191
					mov xf, 213
					call draw

mov si, offset ko	;draw 
					mov yi, 135
					mov yf, 155
					mov xi, 214
					mov xf, 245
					call draw
					
mov si, offset so	;draw 
					mov yi, 133
					mov yf, 155
					mov xi, 246
					mov xf, 277
					call draw

mov si, offset bikkuri	;draw 
					mov yi, 131
					mov yf, 154
					mov xi, 278
					mov xf, 286
					call draw

mov si, offset bikkuri	;draw 
					mov yi, 131
					mov yf, 154
					mov xi, 286
					mov xf, 294
					call draw


ret
nihongo endp 



logo proc                                            				;Function to print main logo

mov si, offset arr1	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 30
					mov xf, 51 
					call draw

mov si, offset arr2	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 51
					mov xf, 72 
					call draw

mov si, offset arr3	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 72
					mov xf, 94 
					call draw

mov si, offset arr4	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 94
					mov xf, 115 
					call draw

mov si, offset arr5	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 115
					mov xf, 121 
					call draw


mov si, offset arr6	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 121
					mov xf, 140 
					call draw


mov si, offset arr7	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 140
					mov xf, 163 
					call draw


mov si, offset arr8	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 163
					mov xf, 201 
					call draw
					

mov si, offset arr9	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 201
					mov xf, 224 
					call draw

mov si, offset arr10	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 224
					mov xf, 267 
					call draw




ret
logo endp



select_level_logo proc									;Function to print select level logo

mov si, offset S_logo_for_select	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 30
					mov xf, 50 
					call draw

mov si, offset E_logo_for_select
					mov yi, 30
					mov yf, 46
					mov xi, 50
					mov xf, 73 
					call draw

mov si, offset L_logo_for_select
					mov yi, 30
					mov yf, 46
					mov xi, 73
					mov xf, 98 
					call draw

mov si, offset E_logo_for_select
					mov yi, 30
					mov yf, 46
					mov xi, 98
					mov xf, 121 
					call draw

mov si, offset C_logo_for_select
					mov yi, 30
					mov yf, 46
					mov xi, 121
					mov xf, 143 
					call draw

mov si, offset T_logo_for_select
					mov yi, 30
					mov yf, 46
					mov xi, 143
					mov xf, 167 
					call draw

mov si, offset arr5	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 167
					mov xf, 173 
					call draw

mov si, offset L_logo_for_select
					mov yi, 30
					mov yf, 46
					mov xi, 173
					mov xf, 198 
					call draw

mov si, offset E_logo_for_select
					mov yi, 30
					mov yf, 46
					mov xi, 198
					mov xf, 221 
					call draw


mov si, offset V_logo_for_level
					mov yi, 30
					mov yf, 46
					mov xi, 221
					mov xf, 249 
					call draw

mov si, offset E_logo_for_select
					mov yi, 30
					mov yf, 46
					mov xi, 249
					mov xf, 272 
					call draw

mov si, offset L_logo_for_select
					mov yi, 30
					mov yf, 46
					mov xi, 272
					mov xf, 297 
					call draw


ret
select_level_logo endp



emoji_logo proc									;Function to print emoji logo

mov si, offset emoji_angry
					mov yi, 90
					mov yf, 110
					mov xi, 225
					mov xf, 264 
					call draw

ret
emoji_logo endp



setting_logo proc									;Function to print select logo

mov si, offset S_logo_for_setting	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 73
					mov xf, 93 
					call draw

mov si, offset E_logo_for_setting	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 93
					mov xf, 116 
					call draw

mov si, offset T_logo_for_setting	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 116
					mov xf, 140 
					call draw

mov si, offset T_logo_for_setting	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 140
					mov xf, 164 
					call draw

mov si, offset I_logo_for_setting	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 164
					mov xf, 175 
					call draw

mov si, offset N_logo_for_setting	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 175
					mov xf, 200 
					call draw

mov si, offset G_logo_for_setting	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 200
					mov xf, 222 
					call draw

mov si, offset S_logo_for_setting	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 222
					mov xf, 242 
					call draw

ret
setting_logo endp



select_color_logo proc										;Function to print select color logo

mov si, offset S_logo_for_select	;draw 
					mov yi, 25
					mov yf, 41
					mov xi, 30
					mov xf, 50 
					call draw

mov si, offset E_logo_for_select
					mov yi, 25
					mov yf, 41
					mov xi, 50
					mov xf, 73 
					call draw

mov si, offset L_logo_for_select
					mov yi, 25
					mov yf, 41
					mov xi, 73
					mov xf, 98 
					call draw

mov si, offset E_logo_for_select
					mov yi, 25
					mov yf, 41
					mov xi, 98
					mov xf, 121 
					call draw

mov si, offset C_logo_for_select
					mov yi, 25
					mov yf, 41
					mov xi, 121
					mov xf, 143 
					call draw

mov si, offset T_logo_for_select
					mov yi, 25
					mov yf, 41
					mov xi, 143
					mov xf, 167 
					call draw

mov si, offset arr5	;draw 
					mov yi, 25
					mov yf, 41
					mov xi, 167
					mov xf, 173 
					call draw

mov si, offset C_logo_for_select
					mov yi, 25
					mov yf, 41
					mov xi, 173
					mov xf, 195 
					call draw

mov si, offset O_logo_for_color
					mov yi, 25
					mov yf, 41
					mov xi, 195
					mov xf, 215 
					call draw

mov si, offset L_logo_for_select
					mov yi, 25
					mov yf, 41
					mov xi, 215
					mov xf, 240 
					call draw

mov si, offset O_logo_for_color
					mov yi, 25
					mov yf, 41
					mov xi, 240
					mov xf, 260 
					call draw

mov si, offset R_logo_for_color
					mov yi, 25
					mov yf, 41
					mov xi, 260
					mov xf, 281 
					call draw


ret
select_color_logo endp



controls_logo proc									;Printing logo of CONTROLS

mov si, offset C_logo_for_controls	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 73
					mov xf, 95 
					call draw

mov si, offset O_logo_for_controls	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 95
					mov xf, 115 
					call draw

mov si, offset N_logo_for_controls	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 115
					mov xf, 140 
					call draw

mov si, offset T_logo_for_controls	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 140
					mov xf, 164 
					call draw

mov si, offset R_logo_for_controls	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 164
					mov xf, 185 
					call draw

mov si, offset O_logo_for_controls	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 185
					mov xf, 205 
					call draw

mov si, offset L_logo_for_controls	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 205
					mov xf, 230 
					call draw

mov si, offset S_logo_for_controls	;draw 
					mov yi, 30
					mov yf, 46
					mov xi, 230
					mov xf, 250 
					call draw

ret
controls_logo endp

show_magazine proc


mov si, offset x_boundary	                                                ;Printing upper border of magazine
					mov yi, 179
					mov yf, 195
					mov xi, 11
					mov xf, 39 
					call draw
mov si, offset x_boundary	 
					mov yi, 179
					mov yf, 195
					mov xi, 39
					mov xf, 67 
					call draw

mov si, offset y_boundary	                                             	;Printing side border of magazine
					mov yi, 179
					mov yf, 195
					mov xi, 11
					mov xf, 13 
					call draw

mov si, offset y_boundary	 
					mov yi, 179
					mov yf, 195
					mov xi, 65
					mov xf, 67 
					call draw
ret
show_magazine endp



show_bullet1 proc

mov si, offset bullet	;draw                                          		;Printing bullet_1
					mov yi, 181
					mov yf, 193
					mov xi, 17
					mov xf, 31
					call draw

ret
show_bullet1 endp

show_bullet2 proc

mov si, offset bullet	;draw                                          		;Printing bullet_2
					mov yi, 181
					mov yf, 193
					mov xi, 32
					mov xf, 46
					call draw

ret
show_bullet2 endp


show_bullet3 proc

mov si, offset bullet	;draw                                          		;Printing bullet_3
					mov yi, 181
					mov yf, 193
					mov xi, 47
					mov xf, 61
					call draw

ret
show_bullet3 endp



show_ducklife_border proc

mov si, offset x_boundary	                                                ;Printing upper border of ducklife
					mov yi, 179
					mov yf, 195
					mov xi, 100
					mov xf, 128 
					call draw
mov si, offset x_boundary	 
					mov yi, 179
					mov yf, 195
					mov xi, 128
					mov xf, 156 
					call draw

mov si, offset x_boundary	 
					mov yi, 179
					mov yf, 195
					mov xi, 156
					mov xf, 184
					call draw

mov si, offset x_boundary	 
					mov yi, 179
					mov yf, 195
					mov xi, 184
					mov xf, 212 
					call draw

mov si, offset y_boundary	                                             ;Printing side border of ducklife
					mov yi, 179
					mov yf, 195
					mov xi, 100
					mov xf, 102 
					call draw

mov si, offset y_boundary	 
					mov yi, 179
					mov yf, 195
					mov xi, 210
					mov xf, 212 
					call draw

show_ducklife_border endp


show_ducklife_border_2 proc

mov si, offset x_boundary	                                                ;Printing upper border of ducklife
					mov yi, 179
					mov yf, 195
					mov xi, 100
					mov xf, 128 
					call draw
mov si, offset x_boundary	 
					mov yi, 179
					mov yf, 195
					mov xi, 128
					mov xf, 156 
					call draw

mov si, offset x_boundary	 
					mov yi, 179
					mov yf, 195
					mov xi, 156
					mov xf, 184
					call draw

mov si, offset x_boundary	 
					mov yi, 179
					mov yf, 195
					mov xi, 184
					mov xf, 212 
					call draw

mov si, offset x_boundary	 
					mov yi, 179
					mov yf, 195
					mov xi, 212
					mov xf, 240 
					call draw

mov si, offset y_boundary	                                             ;Printing side border of ducklife
					mov yi, 179
					mov yf, 195
					mov xi, 100
					mov xf, 102 
					call draw

mov si, offset y_boundary	 
					mov yi, 179
					mov yf, 195
					mov xi, 238
					mov xf, 240 
					call draw

show_ducklife_border_2 endp


show_ducklive1 proc

mov si, offset duck_life_logo	                                             ;Printing ducklife
					mov yi, 181
					mov yf, 193
					mov xi, 112
					mov xf, 126
					call draw
ret
show_ducklive1 endp



show_ducklive2 proc

mov si, offset duck_life_logo	                                             ;Printing ducklife
					mov yi, 181
					mov yf, 193
					mov xi, 127
					mov xf, 141
					call draw 
ret
show_ducklive2 endp


show_ducklive3 proc

mov si, offset duck_life_logo	                                             ;Printing ducklife
					mov yi, 181
					mov yf, 193
					mov xi, 142
					mov xf, 156
					call draw 
ret
show_ducklive3 endp


show_ducklive4 proc

mov si, offset duck_life_logo	                                             ;Printing ducklife
					mov yi, 181
					mov yf, 193
					mov xi, 157
					mov xf, 171
					call draw
ret
show_ducklive4 endp


show_ducklive5 proc 

mov si, offset duck_life_logo	                                             ;Printing ducklife
					mov yi, 181
					mov yf, 193
					mov xi, 172
					mov xf, 186
					call draw
ret
show_ducklive5 endp
 

show_ducklive6 proc

mov si, offset duck_life_logo	                                             ;Printing ducklife
					mov yi, 181
					mov yf, 193
					mov xi, 187
					mov xf, 201
					call draw
ret
show_ducklive6 endp 



show_ducklive1_2 proc

mov si, offset duck_life_logo	                                             ;Printing ducklife
					mov yi, 181
					mov yf, 193
					mov xi, 111
					mov xf, 125
					call draw
ret
show_ducklive1_2 endp



show_ducklive2_2 proc

mov si, offset duck_life_logo	                                             ;Printing ducklife
					mov yi, 181
					mov yf, 193
					mov xi, 126
					mov xf, 140
					call draw 
ret
show_ducklive2_2 endp


show_ducklive3_2 proc

mov si, offset duck_life_logo	                                             ;Printing ducklife
					mov yi, 181
					mov yf, 193
					mov xi, 141
					mov xf, 155
					call draw 
ret
show_ducklive3_2 endp


show_ducklive4_2 proc

mov si, offset duck_life_logo	                                             ;Printing ducklife
					mov yi, 181
					mov yf, 193
					mov xi, 156
					mov xf, 170
					call draw
ret
show_ducklive4_2 endp


show_ducklive5_2 proc 

mov si, offset duck_life_logo	                                             ;Printing ducklife
					mov yi, 181
					mov yf, 193
					mov xi, 171
					mov xf, 185
					call draw
ret
show_ducklive5_2 endp
 

show_ducklive6_2 proc

mov si, offset duck_life_logo	                                             ;Printing ducklife
					mov yi, 181
					mov yf, 193
					mov xi, 186
					mov xf, 200
					call draw
ret
show_ducklive6_2 endp 

show_ducklive7_2 proc 

mov si, offset duck_life_logo	                                             ;Printing ducklife
					mov yi, 181
					mov yf, 193
					mov xi, 201
					mov xf, 215
					call draw
ret
show_ducklive7_2 endp
 

show_ducklive8_2 proc

mov si, offset duck_life_logo	                                             ;Printing ducklife
					mov yi, 181
					mov yf, 193
					mov xi, 216
					mov xf, 230
					call draw
ret
show_ducklive8_2 endp 




show_yellow_ducklive1 proc

mov si, offset ok_duck_life_logo	                                             ;Printing  yellow ducklife
					mov yi, 181
					mov yf, 193
					mov xi, 112
					mov xf, 126
					call draw
ret
show_yellow_ducklive1 endp



show_yellow_ducklive2 proc

mov si, offset ok_duck_life_logo	                                             ;Printing yellow ducklife
					mov yi, 181
					mov yf, 193
					mov xi, 127
					mov xf, 141
					call draw 
ret
show_yellow_ducklive2 endp


show_yellow_ducklive3 proc

mov si, offset ok_duck_life_logo	                                             ;Printing yellow ducklife
					mov yi, 181
					mov yf, 193
					mov xi, 142
					mov xf, 156
					call draw 
ret
show_yellow_ducklive3 endp


show_yellow_ducklive4 proc

mov si, offset ok_duck_life_logo	                                             ;Printing yellow ducklife
					mov yi, 181
					mov yf, 193
					mov xi, 157
					mov xf, 171
					call draw
ret
show_yellow_ducklive4 endp


show_yellow_ducklive5 proc 

mov si, offset ok_duck_life_logo	                                             ;Printing yellow ducklife
					mov yi, 181
					mov yf, 193
					mov xi, 172
					mov xf, 186
					call draw
ret
show_yellow_ducklive5 endp
 

show_yellow_ducklive6 proc

mov si, offset ok_duck_life_logo	                                             ;Printing yellow ducklife
					mov yi, 181
					mov yf, 193
					mov xi, 187
					mov xf, 201
					call draw
ret
show_yellow_ducklive6 endp 








show_score proc

mov si, offset x_boundary	 
					mov yi, 179                          ;Printing upper border of score
					mov yf, 195
					mov xi, 247
					mov xf, 275
					call draw

mov si, offset x_boundary	 
					mov yi, 179
					mov yf, 195
					mov xi, 275
					mov xf, 303 
					call draw


mov si, offset y_boundary	                                             ;Printing side border of score
					mov yi, 179
					mov yf, 195
					mov xi, 247
					mov xf, 249 
					call draw

mov si, offset y_boundary	 
					mov yi, 179
					mov yf, 195
					mov xi, 301
					mov xf, 303 
					call draw




ret
show_score endp


first_digit proc

mov ah,02                                                               ;1 digit of score
mov bh,00
mov dh,23
mov dl,20h
int 10h
mov dl,score_value1
add dl,'0'
mov ah,02
int 21h

ret
first_digit endp

second_digit proc

mov ah,02								;2 digit of score
mov bh,00
mov dh,23
mov dl,21h
int 10h
mov dl,score_value2
add dl,'0'
mov ah,02
int 21h

ret
second_digit endp

third_digit proc

mov ah,02								;3 digit of score
mov bh,00
mov dh,23
mov dl,22h
int 10h
mov dl,score_value3
add dl,'0'
mov ah,02
int 21h

ret
third_digit endp

fourth_digit proc

mov ah,02								;4 digit of score
mov bh,00
mov dh,23
mov dl,23h
int 10h
mov dl,score_value4
add dl,'0'
mov ah,02
int 21h

ret
fourth_digit endp

fifth_digit proc

mov ah,02								;5 digit of score
mov bh,00
mov dh,23
mov dl,24h
int 10h
mov dl,score_value5
add dl,'0'
mov ah,02
int 21h

ret
fifth_digit endp


restart_everything proc								;Function for restart

mov currentX , 30     ; Initial X-coordinate for drawing
mov currentY , 30     ; Initial Y-coordinate for drawing
mov temp_value_for_crosshair1 , 33
mov temp_value_for_crosshair2 , 42
mov temp_value_for_crosshair3 , 59
mov temp_value_for_crosshair4 , 71
mov temp_value_for_crosshair5 , 12
mov temp_value_for_crosshair6 , 24
mov temp_value_for_crosshair7 , 49
mov temp_value_for_crosshair8 , 52
mov temp_value_for_crosshair9 , 39
mov temp_value_for_crosshair10 , 51
mov center_point_of_crosshair_x , 50
mov center_point_of_crosshair_y , 31
mov number_of_yellow_ducks , 0


mov score_value1 , 0
mov score_value2 , 0
mov score_value3 , 0
mov score_value4 , 0
mov score_value5 , 0

mov number_of_bullets_remaining , 3




mov x_initial_duck , 50
mov x_final_duck , 74
mov y_initial_duck , 50
mov y_final_duck , 75



ret
restart_everything endp



show_crosshair proc								;drawing crosshair

mov si, offset crossX						  		
				mov ax,currentY
					mov yi, ax
				mov ax,temp_value_for_crosshair1
					mov yf, ax
				mov ax,currentX
					mov xi, ax
				mov ax,temp_value_for_crosshair2
					mov xf, ax 
					call draw

mov si, offset crossX	;draw 
				mov ax,currentY
					mov yi, ax
				mov ax,temp_value_for_crosshair1
					mov yf, ax
				mov ax,temp_value_for_crosshair3
					mov xi, ax
				mov ax,temp_value_for_crosshair4
					mov xf, ax 
					call draw



mov si, offset crossY	;draw 
				mov ax,temp_value_for_crosshair5
					mov yi, ax
				mov ax,temp_value_for_crosshair6
					mov yf, ax
				mov ax,temp_value_for_crosshair7
					mov xi, ax
				mov ax,temp_value_for_crosshair8
					mov xf, ax 
					call draw

mov si, offset crossY	;draw 
				mov ax,temp_value_for_crosshair9
					mov yi, ax
				mov ax,temp_value_for_crosshair10
					mov yf, ax
				mov ax,temp_value_for_crosshair7
					mov xi, ax
				mov ax,temp_value_for_crosshair8
					mov xf, ax 
					call draw

ret
show_crosshair endp

y0_r6 proc										;

call show_ducklive1
call show_ducklive2
call show_ducklive3
call show_ducklive4
call show_ducklive5
call show_ducklive6
ret
y0_r6 endp

y1_r5 proc

call show_yellow_ducklive1
call show_ducklive2
call show_ducklive3
call show_ducklive4
call show_ducklive5
call show_ducklive6
ret
y1_r5 endp

y2_r4 proc

call show_yellow_ducklive1
call show_yellow_ducklive2
call show_ducklive3
call show_ducklive4
call show_ducklive5
call show_ducklive6
ret
y2_r4 endp

y3_r3 proc

call show_yellow_ducklive1
call show_yellow_ducklive2
call show_yellow_ducklive3
call show_ducklive4
call show_ducklive5
call show_ducklive6
ret
y3_r3 endp

y4_r2 proc

call show_yellow_ducklive1
call show_yellow_ducklive2
call show_yellow_ducklive3
call show_yellow_ducklive4
call show_ducklive5
call show_ducklive6
ret
y4_r2 endp

y5_r1 proc

call show_yellow_ducklive1
call show_yellow_ducklive2
call show_yellow_ducklive3
call show_yellow_ducklive4
call show_yellow_ducklive5
call show_ducklive6

ret
y5_r1 endp

y6_r0 proc

call show_yellow_ducklive1
call show_yellow_ducklive2
call show_yellow_ducklive3
call show_yellow_ducklive4
call show_yellow_ducklive5
call show_yellow_ducklive6
ret
y6_r0 endp




enter_pressed_during_game proc						;Function of enter pressed during game starts from here	


mov ah, 6								;Displaying green background
mov al, 0
mov bh, 2     ;color
mov ch, 18     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 24     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h

dec number_of_bullets_remaining 
cmp number_of_bullets_remaining , 2 					;comparing remaining bullets 
je display_2_bullet

cmp number_of_bullets_remaining , 1
je display_1_bullet

cmp number_of_bullets_remaining , 0
je display_0_bullet




display_2_bullet:							; Display 2 bullets remaining


mov ax , center_point_of_crosshair_x					;Checking whether bullet hit target or not (x-axis)
cmp ax , x_initial_duck
jb not_hit
cmp ax , x_final_duck
ja not_hit

mov ax, center_point_of_crosshair_y					;Checking whether bullet hit target or not (y-axis)
cmp ax , y_initial_duck
jb not_hit
cmp ax , y_final_duck
ja not_hit



inc number_of_ducks_spawned
inc number_of_yellow_ducks
mov temp_telling_us_to_show_dead_duck,1
mov temp_for_hit , 1
mov ah, 6                                                              ;coloring background as bullet hit the target
mov al, 0
mov bh, 11     ;color
mov ch, 0     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 17     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h




mov al,max_score							;adding score to second score
cmp score_value2,al
je add_scorevalue1
inc score_value2

mov number_of_bullets_remaining,3					;re-filling bullets to magazine

call show_crosshair
call show_magazine
call show_bullet1
call show_bullet2
call show_bullet3
jmp end_enter

add_scorevalue1:							;Adding in first score


mov number_of_bullets_remaining,3
mov score_value2,0
mov al,max_score
cmp score_value1,al
je no_inc_of_scorevalue1
inc score_value1
jmp coun_sto
no_inc_of_scorevalue1:
mov score_value2,9

coun_sto:
call show_crosshair
call show_magazine
call show_bullet1
call show_bullet2
call show_bullet3
jmp end_enter

not_hit:
mov al,max_score
cmp number_of_miss2,al
je inc_number_of_miss1
inc number_of_miss2
jmp no_inc_number_of_miss1
inc_number_of_miss1:
inc number_of_miss1
mov number_of_miss2,0

no_inc_number_of_miss1:
mov al,min_score
cmp score_value3,al							;Subtracting from third score
je sub_scorevalue2
dec score_value3
dec score_value3
dec score_value3
dec score_value3
dec score_value3
call show_crosshair
call show_magazine							 
call show_bullet2
call show_bullet3

jmp end_enter

sub_scorevalue2:							;Subtracting from second score
mov al,min_score
cmp score_value2,al
je sub_scorevalue1
dec score_value2
mov score_value3,5
call show_crosshair
call show_magazine							 
call show_bullet2
call show_bullet3
jmp end_enter


sub_scorevalue1:							;Subtracting from first score
mov al,min_score
cmp score_value1,al
je no_change_in_score
dec score_value1
mov score_value2,9
mov score_value3,5

no_change_in_score:
call show_crosshair
call show_magazine							
call show_bullet2
call show_bullet3
jmp end_enter







display_1_bullet:							; Display 1 bullets remaining
mov ax , center_point_of_crosshair_x
cmp ax , x_initial_duck
jb not_hit1
cmp ax , x_final_duck
ja not_hit1

mov ax, center_point_of_crosshair_y
cmp ax , y_initial_duck
jb not_hit1
cmp ax , y_final_duck
ja not_hit1


mov temp_telling_us_to_show_dead_duck,1
inc number_of_ducks_spawned
inc number_of_yellow_ducks
mov temp_for_hit , 1
mov ah, 6                                                           ;coloring background
mov al, 0
mov bh, 11     ;color
mov ch, 0     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 17     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h


mov al,max_score
cmp score_value2,al
je add_scorevalue1_1
inc score_value2

mov number_of_bullets_remaining,3

call show_crosshair
call show_magazine
call show_bullet1
call show_bullet2
call show_bullet3
jmp end_enter

add_scorevalue1_1:
mov number_of_bullets_remaining,3
mov score_value2,0
mov al,max_score
cmp score_value1,al
je no_inc_of_scorevalue1_1
inc score_value1
jmp coun_sto_1
no_inc_of_scorevalue1_1:
mov score_value2,9

coun_sto_1:
call show_crosshair
call show_magazine
call show_bullet1
call show_bullet2
call show_bullet3
jmp end_enter

not_hit1:
call show_crosshair
call show_magazine							;Displaying remaining bullets 
call show_bullet3
mov al,max_score
cmp number_of_miss2,al
je inc_number_of_miss1_1
inc number_of_miss2
jmp no_inc_number_of_miss1_1
inc_number_of_miss1_1:
inc number_of_miss1
mov number_of_miss2,0

no_inc_number_of_miss1_1:
mov al,min_score
cmp score_value3,al
je sub_scorevalue2_1
dec score_value3
dec score_value3
dec score_value3
dec score_value3
dec score_value3
call show_crosshair
call show_magazine							;Displaying remaining bullets 
call show_bullet3

jmp end_enter

sub_scorevalue2_1:
mov al,min_score
cmp score_value2,al
je sub_scorevalue1_1
dec score_value2
mov score_value3,5
call show_crosshair
call show_magazine							;Displaying remaining bullets 
call show_bullet3
jmp end_enter


sub_scorevalue1_1:
mov al,min_score
cmp score_value1,al
je end_enter
dec score_value1
mov score_value2,9
mov score_value3,5
call show_crosshair
call show_magazine							;Displaying remaining bullets 
call show_bullet3
jmp end_enter










display_0_bullet:							; Display 2 bullets remaining




mov ax , center_point_of_crosshair_x					;Checking whether bullet hit target or not (x-axis)
cmp ax , x_initial_duck
jb not_hit_2
cmp ax , x_final_duck
ja not_hit_2

mov ax, center_point_of_crosshair_y					;Checking whether bullet hit target or not (y-axis)
cmp ax , y_initial_duck
jb not_hit_2
cmp ax , y_final_duck
ja not_hit_2


mov temp_telling_us_to_show_dead_duck,1
inc number_of_ducks_spawned
inc number_of_yellow_ducks
mov temp_for_hit , 1
mov ah, 6                                                              ;coloring background as bullet hit the target
mov al, 0
mov bh, 11     ;color
mov ch, 0     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 17     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h


mov al,max_score							;adding score to second score
cmp score_value2,al
je add_scorevalue1_2
inc score_value2

mov number_of_bullets_remaining,3					;re-filling bullets to magazine

call show_crosshair
call show_magazine
call show_bullet1
call show_bullet2
call show_bullet3
jmp end_enter

add_scorevalue1_2:							;Adding in first score


mov number_of_bullets_remaining,3
mov score_value2,0
mov al,max_score
cmp score_value1,al
je no_inc_of_scorevalue1_2
inc score_value1
jmp coun_sto_2
no_inc_of_scorevalue1_2:
mov score_value2,9

coun_sto_2:
call show_crosshair
call show_magazine
call show_bullet1
call show_bullet2
call show_bullet3
jmp end_enter

not_hit_2:
inc number_of_ducks_spawned
mov temp_for_hit,1
mov ah, 6                                                              ;coloring background as bullet hit the target
mov al, 0
mov bh, 11     ;color
mov ch, 0     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 17     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h

call show_crosshair
call show_magazine
mov al,max_score
cmp number_of_miss2,al
je inc_number_of_miss1_2
inc number_of_miss2
jmp no_inc_number_of_miss1_2
inc_number_of_miss1_2:
inc number_of_miss1
mov number_of_miss2,0

no_inc_number_of_miss1_2:
mov al,min_score
cmp score_value3,al							;Subtracting from third score
je sub_scorevalue2_2
dec score_value3
dec score_value3
dec score_value3
dec score_value3
dec score_value3
call show_crosshair
call show_magazine							 



mov si, offset text_to_display_duck_ran_away       					;Printing colored text ('DUCK RAN AWAY')
    mov dh, 9            ; Row
    mov dl, 0Bh         ; Column

    mov cx,16
    printname2:                          
        mov al, [si]          ; Load character to print
        mov ah, 02h           ; Set function to set cursor position
        mov bh, 0             ; Page number (default to 0)
        int 10h               ; Set cursor position

        mov bl, 1100b         ; Text attribute (light cyan on black background)
        mov ah, 09h           ; Set function to display character and attribute
        inc dl
        int 10h               ; Display character with specified attribute

        inc si                ; Move to next character
        loop printname2

mov cx, 15H            ;High End
        mov dx, 0A120h        ;Low End
        mov ah, 86H            ;Wait function
        int 15H
call show_bullet1
call show_bullet2
call show_bullet3

jmp end_enter



sub_scorevalue2_2:							;Subtracting from second score
mov al,min_score
cmp score_value2,al
je sub_scorevalue1_2
dec score_value2
mov score_value3,5
call show_crosshair
call show_magazine

mov si, offset text_to_display_duck_ran_away       					;Printing colored text ('DUCK RAN AWAY')
    mov dh, 9            ; Row
    mov dl, 0Bh         ; Column

    mov cx,16
    printname3:                          
        mov al, [si]          ; Load character to print
        mov ah, 02h           ; Set function to set cursor position
        mov bh, 0             ; Page number (default to 0)
        int 10h               ; Set cursor position

        mov bl, 1100b         ; Text attribute (light cyan on black background)
        mov ah, 09h           ; Set function to display character and attribute
        inc dl
        int 10h               ; Display character with specified attribute

        inc si                ; Move to next character
        loop printname3

mov cx, 15H            ;High End
        mov dx, 0A120h        ;Low End
        mov ah, 86H            ;Wait function
        int 15H	

call show_bullet1
call show_bullet2
call show_bullet3						 
jmp end_enter


sub_scorevalue1_2:							;Subtracting from first score
mov al,min_score
cmp score_value1,al
je no_change_in_score_2
dec score_value1
mov score_value2,9
mov score_value3,5

no_change_in_score_2:
call show_crosshair
call show_magazine

mov si, offset text_to_display_duck_ran_away       					;Printing colored text ('DUCK RAN AWAY')
    mov dh, 9            ; Row
    mov dl, 0Bh         ; Column

    mov cx,16
    printname4:                          
        mov al, [si]          ; Load character to print
        mov ah, 02h           ; Set function to set cursor position
        mov bh, 0             ; Page number (default to 0)
        int 10h               ; Set cursor position

        mov bl, 1100b         ; Text attribute (light cyan on black background)
        mov ah, 09h           ; Set function to display character and attribute
        inc dl
        int 10h               ; Display character with specified attribute

        inc si                ; Move to next character
        loop printname4

mov cx, 15H            ;High End
        mov dx, 0A120h        ;Low End
        mov ah, 86H            ;Wait function
        int 15H	

call show_bullet1
call show_bullet2
call show_bullet3						
jmp end_enter





end_enter:

call show_ducklife_border
cmp number_of_yellow_ducks,1
je call_yellow1
cmp number_of_yellow_ducks,2
je call_yellow2
cmp number_of_yellow_ducks,3
je call_yellow3
cmp number_of_yellow_ducks,4
je call_yellow4
cmp number_of_yellow_ducks,5
je call_yellow5
cmp number_of_yellow_ducks,6
je call_yellow6

call y0_r6
jmp end_enter1

call_yellow1:
call y1_r5
jmp end_enter1

call_yellow2:
call y2_r4
jmp end_enter1

call_yellow3:
call y3_r3
jmp end_enter1

call_yellow4:
call y4_r2
jmp end_enter1

call_yellow5:
call y5_r1
jmp end_enter1

call_yellow6:
call y6_r0
jmp end_enter1


end_enter1:
call show_score
call first_digit
call second_digit
call third_digit
call fourth_digit
call fifth_digit

cmp temp_telling_us_to_show_dead_duck,1
je show_falling_dead_duck
jmp no_show_falling_dead_duck

show_falling_dead_duck:
call showing_dead_duck


no_show_falling_dead_duck:
mov temp_telling_us_to_show_dead_duck,0

ret
enter_pressed_during_game endp




showing_dead_duck proc

mov ah, 6                                                           ;coloring background
mov al, 0
mov bh, 11     ;color
mov ch, 0     ;top row of window
mov cl, 0     ;left most column of window
mov dh, 17     ;Bottom row of window
mov dl, 39     ;Right most column of window
int 10h

mov si, offset duck_surprised	;draw 
				mov ax, y_initial_duck
					mov yi, ax
				mov ax, y_final_duck
					mov yf, ax
				mov ax, x_initial_duck
					mov xi, ax
				mov ax, x_final_duck
					mov xf, ax
					call draw

mov cx, 23H            ;High End
        mov dx, 0A120h        ;Low End
        mov ah, 86H            ;Wait function
        int 15H


movement_of_dead_duck:

cmp y_final_duck,144
je outing_loop
mov si, offset duck_dead	;draw 
				mov ax, y_initial_duck
					mov yi, ax
				mov ax, y_final_duck
					mov yf, ax
				mov ax, x_initial_duck
					mov xi, ax
				mov ax, x_final_duck
					mov xf, ax
					call draw




mov cx, 40000       ; Adjust this value to control the speed
delayLoop9:
    dec cx             ; Decrement the loop counter
    jnz delayLoop9      ; Continue looping until cx becomes zero



inc y_initial_duck
inc y_final_duck

jmp movement_of_dead_duck

outing_loop:
ret
showing_dead_duck endp





everything_zero proc

mov left_to_upright , 0
mov left_to_downright , 0
mov right_to_upleft , 0
mov right_to_downleft , 0
mov top_to_rightdown , 0
mov top_to_leftdown , 0
mov bottom_to_rightup , 0
mov bottom_to_leftup , 0

ret
everything_zero endp

show_result proc

mov ax, 3h                                                   		;Clearing entire screen
    int 10h

mov ax, 13h                                                  		;video mode
    int 10h
mov ah,02
mov bh,00
mov dh,17
mov dl,0Bh
int 10h

mov dx, offset text_to_show_number_of_hits       						;Displaying user name
mov ah,09h
int 21h

mov dl,number_of_yellow_ducks
add dl,'0'
mov ah,02
int 21h

mov dl,'/'
mov ah,02
int 21h

mov dl,6
add dl,'0'
mov ah,02
int 21h



mov ah,02
mov bh,00
mov dh,19
mov dl,0Bh
int 10h

mov dx, offset text_to_show_number_of_score       						;Displaying user name
mov ah,09h
int 21h

mov dx,0
mov dl,score_value1
add dl,'0'
mov ah,02
int 21h
mov dl,score_value2
add dl,'0'
mov ah,02
int 21h
mov dl,score_value3
add dl,'0'
mov ah,02
int 21h
mov dl,score_value4
add dl,'0'
mov ah,02
int 21h
mov dl,score_value5
add dl,'0'
mov ah,02
int 21h

mov ah,02
mov bh,00
mov dh,21
mov dl,0Bh
int 10h

mov dx, offset text_to_show_number_of_miss       						;Displaying user name
mov ah,09h
int 21h

mov dl,number_of_miss1
add dl,'0'
mov ah,02
int 21h
mov dl,number_of_miss2
add dl,'0'
mov ah,02
int 21h

ret
show_result endp

reload_magazine proc

  mov cx, 12H            ;High End
        mov dx, 0A120h        ;Low End
        mov ah, 86H            ;Wait function
        int 15H


ret
reload_magazine endp


draw proc
	mov ah,0ch
	mov dx, yi		; y coordinate initial( up down)
y:
	mov cx, xi		;x coordinate initial (left right)
x:
	mov al,[si]			; start array
	int 10h
	inc si				; increment full row  (x axis)
	inc cx
	cmp cx, xf		; x coordinate final( left right)
	jb x
	inc dx				; jump to next row
	cmp dx, yf		; y coordinate final( up down)
	jb y
ret
draw endp


spawn_duck_random proc

MOV AH, 00h  ; interrupts to get system time        
   INT 1AH      ; CX:DX now hold number of clock ticks since midnight      

   mov  ax, dx
   xor  dx, dx
   mov  cx, 9    
   div  cx       ; here dx contains the remainder of the division - from 0 to 9

cmp dl,0
je duck_spawn_pattern_0
cmp dl,1
je duck_spawn_pattern_1
cmp dl,2
je duck_spawn_pattern_2
cmp dl,3
je duck_spawn_pattern_3
cmp dl,4
je duck_spawn_pattern_4
cmp dl,5
je duck_spawn_pattern_5
cmp dl,6
je duck_spawn_pattern_6
cmp dl,7
je duck_spawn_pattern_7



duck_spawn_pattern_0:
call everything_zero
mov x_initial_duck , 270										;variables to store coordinate of ducks
mov x_final_duck , 290
mov y_initial_duck , 121
mov y_final_duck , 143
mov bottom_to_leftup,1
mov temp_for_hit,0
mov number_of_bullets_remaining,3					;re-filling bullets to magazine
jmp nikal

duck_spawn_pattern_1:
call everything_zero
mov x_initial_duck , 200										;variables to store coordinate of ducks
mov x_final_duck , 220
mov y_initial_duck , 121
mov y_final_duck , 143
mov left_to_upright,1
mov temp_for_hit,0
mov number_of_bullets_remaining,3					;re-filling bullets to magazine
jmp nikal

duck_spawn_pattern_2:
call everything_zero
mov x_initial_duck , 270										;variables to store coordinate of ducks
mov x_final_duck , 290
mov y_initial_duck , 81
mov y_final_duck , 103
mov right_to_upleft,1
mov temp_for_hit,0
mov number_of_bullets_remaining,3					;re-filling bullets to magazine
jmp nikal

duck_spawn_pattern_3:
call everything_zero
mov x_initial_duck , 230										;variables to store coordinate of ducks
mov x_final_duck , 250
mov y_initial_duck , 101
mov y_final_duck , 123
mov bottom_to_rightup,1
mov temp_for_hit,0
mov number_of_bullets_remaining,3					;re-filling bullets to magazine
jmp nikal

duck_spawn_pattern_4:
call everything_zero
mov x_initial_duck , 100										;variables to store coordinate of ducks
mov x_final_duck , 120
mov y_initial_duck , 61
mov y_final_duck , 83
mov right_to_downleft,1
mov temp_for_hit,0
mov number_of_bullets_remaining,3					;re-filling bullets to magazine
jmp nikal

duck_spawn_pattern_5:
call everything_zero
mov x_initial_duck , 150										;variables to store coordinate of ducks
mov x_final_duck , 170
mov y_initial_duck , 20
mov y_final_duck , 42
mov left_to_downright,1
mov temp_for_hit,0
mov number_of_bullets_remaining,3					;re-filling bullets to magazine
jmp nikal

duck_spawn_pattern_6:
call everything_zero
mov x_initial_duck , 20										;variables to store coordinate of ducks
mov x_final_duck , 40
mov y_initial_duck , 81
mov y_final_duck , 103
mov top_to_rightdown,1
mov temp_for_hit,0
mov number_of_bullets_remaining,3					;re-filling bullets to magazine
jmp nikal


duck_spawn_pattern_7:
call everything_zero
mov x_initial_duck , 60										;variables to store coordinate of ducks
mov x_final_duck , 80
mov y_initial_duck , 81
mov y_final_duck , 103
mov top_to_leftdown,1
mov temp_for_hit,0
mov number_of_bullets_remaining,3					;re-filling bullets to magazine
jmp nikal

call everything_zero
mov x_initial_duck , 270										;variables to store coordinate of ducks
mov x_final_duck , 290
mov y_initial_duck , 121
mov y_final_duck , 143
mov bottom_to_leftup,1
mov temp_for_hit,0
mov number_of_bullets_remaining,3

nikal:
ret
spawn_duck_random endp



outt:

mov ah, 4ch
int 21h
end